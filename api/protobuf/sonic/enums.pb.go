// openconfig.enums is generated by proto_generator as a protobuf
// representation of a YANG schema.
//
// Input schema modules:
//  - ../api/yang/sonic/nocsys-fdb.yang
//  - ../api/yang/sonic/nocsys-ntp.yang
//  - ../api/yang/sonic/nocsys-todo.yang
//  - ../api/yang/sonic/nocsys-types.yang
//  - ../api/yang/sonic/nocsys-route.yang
//  - ../api/yang/sonic/nocsys-extension.yang
//  - ../api/yang/sonic/nocsys-loopback-interface.yang
//  - ../api/yang/sonic/nocsys-portchannel.yang
//  - ../api/yang/sonic/nocsys-vlan.yang
//  - ../api/yang/sonic/nocsys-port.yang
//  - ../api/yang/sonic/nocsys-platform-types.yang
//  - ../api/yang/sonic/nocsys-mirror-session.yang
//  - ../api/yang/sonic/nocsys-vrf.yang
//  - ../api/yang/sonic/third_party/ietf/ietf-yang-types.yang
//  - ../api/yang/sonic/third_party/ietf/ietf-inet-types.yang
//  - ../api/yang/sonic/third_party/ietf/iana-if-type.yang
//  - ../api/yang/sonic/third_party/ietf/ietf-interfaces.yang
//  - ../api/yang/sonic/nocsys-neighbor.yang
//  - ../api/yang/sonic/nocsys-acl.yang
//  - ../api/yang/sonic/nocsys-vxlan.yang
//  - ../api/yang/sonic/nocsys-platform.yang
//  - ../api/yang/sonic/nocsys-interface.yang
//  - ../api/yang/sonic/nocsys-lldp.yang

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: enums.proto

package sonic

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/openconfig/ygot/proto/yext"
	_ "github.com/openconfig/ygot/proto/ywrapper"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// NocsysPlatformTypesSONICHARDWARECOMPONENT represents an enumerated type generated for the YANG identity SONIC_HARDWARE_COMPONENT.
type NocsysPlatformTypesSONICHARDWARECOMPONENT int32

const (
	NocsysPlatformTypesSONICHARDWARECOMPONENT_NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_UNSET        NocsysPlatformTypesSONICHARDWARECOMPONENT = 0
	NocsysPlatformTypesSONICHARDWARECOMPONENT_NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_POWER_SUPPLY NocsysPlatformTypesSONICHARDWARECOMPONENT = 137023917
	NocsysPlatformTypesSONICHARDWARECOMPONENT_NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_SENSOR       NocsysPlatformTypesSONICHARDWARECOMPONENT = 375588988
	NocsysPlatformTypesSONICHARDWARECOMPONENT_NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_FAN          NocsysPlatformTypesSONICHARDWARECOMPONENT = 424176681
)

// Enum value maps for NocsysPlatformTypesSONICHARDWARECOMPONENT.
var (
	NocsysPlatformTypesSONICHARDWARECOMPONENT_name = map[int32]string{
		0:         "NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_UNSET",
		137023917: "NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_POWER_SUPPLY",
		375588988: "NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_SENSOR",
		424176681: "NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_FAN",
	}
	NocsysPlatformTypesSONICHARDWARECOMPONENT_value = map[string]int32{
		"NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_UNSET":        0,
		"NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_POWER_SUPPLY": 137023917,
		"NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_SENSOR":       375588988,
		"NOCSYSPLATFORMTYPESSONICHARDWARECOMPONENT_FAN":          424176681,
	}
)

func (x NocsysPlatformTypesSONICHARDWARECOMPONENT) Enum() *NocsysPlatformTypesSONICHARDWARECOMPONENT {
	p := new(NocsysPlatformTypesSONICHARDWARECOMPONENT)
	*p = x
	return p
}

func (x NocsysPlatformTypesSONICHARDWARECOMPONENT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NocsysPlatformTypesSONICHARDWARECOMPONENT) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[0].Descriptor()
}

func (NocsysPlatformTypesSONICHARDWARECOMPONENT) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[0]
}

func (x NocsysPlatformTypesSONICHARDWARECOMPONENT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NocsysPlatformTypesSONICHARDWARECOMPONENT.Descriptor instead.
func (NocsysPlatformTypesSONICHARDWARECOMPONENT) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{0}
}

// NocsysPlatformTypesSONICSOFTWARECOMPONENT represents an enumerated type generated for the YANG identity SONIC_SOFTWARE_COMPONENT.
type NocsysPlatformTypesSONICSOFTWARECOMPONENT int32

const (
	NocsysPlatformTypesSONICSOFTWARECOMPONENT_NOCSYSPLATFORMTYPESSONICSOFTWARECOMPONENT_UNSET            NocsysPlatformTypesSONICSOFTWARECOMPONENT = 0
	NocsysPlatformTypesSONICSOFTWARECOMPONENT_NOCSYSPLATFORMTYPESSONICSOFTWARECOMPONENT_OPERATING_SYSTEM NocsysPlatformTypesSONICSOFTWARECOMPONENT = 527639718
)

// Enum value maps for NocsysPlatformTypesSONICSOFTWARECOMPONENT.
var (
	NocsysPlatformTypesSONICSOFTWARECOMPONENT_name = map[int32]string{
		0:         "NOCSYSPLATFORMTYPESSONICSOFTWARECOMPONENT_UNSET",
		527639718: "NOCSYSPLATFORMTYPESSONICSOFTWARECOMPONENT_OPERATING_SYSTEM",
	}
	NocsysPlatformTypesSONICSOFTWARECOMPONENT_value = map[string]int32{
		"NOCSYSPLATFORMTYPESSONICSOFTWARECOMPONENT_UNSET":            0,
		"NOCSYSPLATFORMTYPESSONICSOFTWARECOMPONENT_OPERATING_SYSTEM": 527639718,
	}
)

func (x NocsysPlatformTypesSONICSOFTWARECOMPONENT) Enum() *NocsysPlatformTypesSONICSOFTWARECOMPONENT {
	p := new(NocsysPlatformTypesSONICSOFTWARECOMPONENT)
	*p = x
	return p
}

func (x NocsysPlatformTypesSONICSOFTWARECOMPONENT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NocsysPlatformTypesSONICSOFTWARECOMPONENT) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[1].Descriptor()
}

func (NocsysPlatformTypesSONICSOFTWARECOMPONENT) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[1]
}

func (x NocsysPlatformTypesSONICSOFTWARECOMPONENT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NocsysPlatformTypesSONICSOFTWARECOMPONENT.Descriptor instead.
func (NocsysPlatformTypesSONICSOFTWARECOMPONENT) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{1}
}

// NocsysTypesAdminStatus represents an enumerated type generated for the YANG enumerated type admin-status.
type NocsysTypesAdminStatus int32

const (
	NocsysTypesAdminStatus_NOCSYSTYPESADMINSTATUS_UNSET NocsysTypesAdminStatus = 0
	NocsysTypesAdminStatus_NOCSYSTYPESADMINSTATUS_up    NocsysTypesAdminStatus = 1
	NocsysTypesAdminStatus_NOCSYSTYPESADMINSTATUS_down  NocsysTypesAdminStatus = 2
)

// Enum value maps for NocsysTypesAdminStatus.
var (
	NocsysTypesAdminStatus_name = map[int32]string{
		0: "NOCSYSTYPESADMINSTATUS_UNSET",
		1: "NOCSYSTYPESADMINSTATUS_up",
		2: "NOCSYSTYPESADMINSTATUS_down",
	}
	NocsysTypesAdminStatus_value = map[string]int32{
		"NOCSYSTYPESADMINSTATUS_UNSET": 0,
		"NOCSYSTYPESADMINSTATUS_up":    1,
		"NOCSYSTYPESADMINSTATUS_down":  2,
	}
)

func (x NocsysTypesAdminStatus) Enum() *NocsysTypesAdminStatus {
	p := new(NocsysTypesAdminStatus)
	*p = x
	return p
}

func (x NocsysTypesAdminStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NocsysTypesAdminStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[2].Descriptor()
}

func (NocsysTypesAdminStatus) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[2]
}

func (x NocsysTypesAdminStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NocsysTypesAdminStatus.Descriptor instead.
func (NocsysTypesAdminStatus) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{2}
}

// NocsysTypesIpFamily represents an enumerated type generated for the YANG enumerated type ip-family.
type NocsysTypesIpFamily int32

const (
	NocsysTypesIpFamily_NOCSYSTYPESIPFAMILY_UNSET NocsysTypesIpFamily = 0
	NocsysTypesIpFamily_NOCSYSTYPESIPFAMILY_IPv4  NocsysTypesIpFamily = 1
	NocsysTypesIpFamily_NOCSYSTYPESIPFAMILY_IPv6  NocsysTypesIpFamily = 2
)

// Enum value maps for NocsysTypesIpFamily.
var (
	NocsysTypesIpFamily_name = map[int32]string{
		0: "NOCSYSTYPESIPFAMILY_UNSET",
		1: "NOCSYSTYPESIPFAMILY_IPv4",
		2: "NOCSYSTYPESIPFAMILY_IPv6",
	}
	NocsysTypesIpFamily_value = map[string]int32{
		"NOCSYSTYPESIPFAMILY_UNSET": 0,
		"NOCSYSTYPESIPFAMILY_IPv4":  1,
		"NOCSYSTYPESIPFAMILY_IPv6":  2,
	}
)

func (x NocsysTypesIpFamily) Enum() *NocsysTypesIpFamily {
	p := new(NocsysTypesIpFamily)
	*p = x
	return p
}

func (x NocsysTypesIpFamily) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NocsysTypesIpFamily) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[3].Descriptor()
}

func (NocsysTypesIpFamily) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[3]
}

func (x NocsysTypesIpFamily) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NocsysTypesIpFamily.Descriptor instead.
func (NocsysTypesIpFamily) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{3}
}

// NocsysTypesIpType represents an enumerated type generated for the YANG enumerated type ip-type.
type NocsysTypesIpType int32

const (
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_UNSET    NocsysTypesIpType = 0
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_ANY      NocsysTypesIpType = 1
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_IP       NocsysTypesIpType = 2
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_NON_IP   NocsysTypesIpType = 3
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_IPV4     NocsysTypesIpType = 4
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_IPV6     NocsysTypesIpType = 5
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_IPv4ANY  NocsysTypesIpType = 6
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_NON_IP4  NocsysTypesIpType = 7
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_IPv6ANY  NocsysTypesIpType = 8
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_NON_IPv6 NocsysTypesIpType = 9
	NocsysTypesIpType_NOCSYSTYPESIPTYPE_ARP      NocsysTypesIpType = 10
)

// Enum value maps for NocsysTypesIpType.
var (
	NocsysTypesIpType_name = map[int32]string{
		0:  "NOCSYSTYPESIPTYPE_UNSET",
		1:  "NOCSYSTYPESIPTYPE_ANY",
		2:  "NOCSYSTYPESIPTYPE_IP",
		3:  "NOCSYSTYPESIPTYPE_NON_IP",
		4:  "NOCSYSTYPESIPTYPE_IPV4",
		5:  "NOCSYSTYPESIPTYPE_IPV6",
		6:  "NOCSYSTYPESIPTYPE_IPv4ANY",
		7:  "NOCSYSTYPESIPTYPE_NON_IP4",
		8:  "NOCSYSTYPESIPTYPE_IPv6ANY",
		9:  "NOCSYSTYPESIPTYPE_NON_IPv6",
		10: "NOCSYSTYPESIPTYPE_ARP",
	}
	NocsysTypesIpType_value = map[string]int32{
		"NOCSYSTYPESIPTYPE_UNSET":    0,
		"NOCSYSTYPESIPTYPE_ANY":      1,
		"NOCSYSTYPESIPTYPE_IP":       2,
		"NOCSYSTYPESIPTYPE_NON_IP":   3,
		"NOCSYSTYPESIPTYPE_IPV4":     4,
		"NOCSYSTYPESIPTYPE_IPV6":     5,
		"NOCSYSTYPESIPTYPE_IPv4ANY":  6,
		"NOCSYSTYPESIPTYPE_NON_IP4":  7,
		"NOCSYSTYPESIPTYPE_IPv6ANY":  8,
		"NOCSYSTYPESIPTYPE_NON_IPv6": 9,
		"NOCSYSTYPESIPTYPE_ARP":      10,
	}
)

func (x NocsysTypesIpType) Enum() *NocsysTypesIpType {
	p := new(NocsysTypesIpType)
	*p = x
	return p
}

func (x NocsysTypesIpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NocsysTypesIpType) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[4].Descriptor()
}

func (NocsysTypesIpType) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[4]
}

func (x NocsysTypesIpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NocsysTypesIpType.Descriptor instead.
func (NocsysTypesIpType) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{4}
}

// NocsysTypesOperStatus represents an enumerated type generated for the YANG enumerated type oper-status.
type NocsysTypesOperStatus int32

const (
	NocsysTypesOperStatus_NOCSYSTYPESOPERSTATUS_UNSET NocsysTypesOperStatus = 0
	NocsysTypesOperStatus_NOCSYSTYPESOPERSTATUS_up    NocsysTypesOperStatus = 1
	NocsysTypesOperStatus_NOCSYSTYPESOPERSTATUS_down  NocsysTypesOperStatus = 2
)

// Enum value maps for NocsysTypesOperStatus.
var (
	NocsysTypesOperStatus_name = map[int32]string{
		0: "NOCSYSTYPESOPERSTATUS_UNSET",
		1: "NOCSYSTYPESOPERSTATUS_up",
		2: "NOCSYSTYPESOPERSTATUS_down",
	}
	NocsysTypesOperStatus_value = map[string]int32{
		"NOCSYSTYPESOPERSTATUS_UNSET": 0,
		"NOCSYSTYPESOPERSTATUS_up":    1,
		"NOCSYSTYPESOPERSTATUS_down":  2,
	}
)

func (x NocsysTypesOperStatus) Enum() *NocsysTypesOperStatus {
	p := new(NocsysTypesOperStatus)
	*p = x
	return p
}

func (x NocsysTypesOperStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NocsysTypesOperStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[5].Descriptor()
}

func (NocsysTypesOperStatus) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[5]
}

func (x NocsysTypesOperStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NocsysTypesOperStatus.Descriptor instead.
func (NocsysTypesOperStatus) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{5}
}

// NocsysTypesPacketAction represents an enumerated type generated for the YANG enumerated type packet-action.
type NocsysTypesPacketAction int32

const (
	NocsysTypesPacketAction_NOCSYSTYPESPACKETACTION_UNSET    NocsysTypesPacketAction = 0
	NocsysTypesPacketAction_NOCSYSTYPESPACKETACTION_DROP     NocsysTypesPacketAction = 1
	NocsysTypesPacketAction_NOCSYSTYPESPACKETACTION_FORWARD  NocsysTypesPacketAction = 2
	NocsysTypesPacketAction_NOCSYSTYPESPACKETACTION_REDIRECT NocsysTypesPacketAction = 3
)

// Enum value maps for NocsysTypesPacketAction.
var (
	NocsysTypesPacketAction_name = map[int32]string{
		0: "NOCSYSTYPESPACKETACTION_UNSET",
		1: "NOCSYSTYPESPACKETACTION_DROP",
		2: "NOCSYSTYPESPACKETACTION_FORWARD",
		3: "NOCSYSTYPESPACKETACTION_REDIRECT",
	}
	NocsysTypesPacketAction_value = map[string]int32{
		"NOCSYSTYPESPACKETACTION_UNSET":    0,
		"NOCSYSTYPESPACKETACTION_DROP":     1,
		"NOCSYSTYPESPACKETACTION_FORWARD":  2,
		"NOCSYSTYPESPACKETACTION_REDIRECT": 3,
	}
)

func (x NocsysTypesPacketAction) Enum() *NocsysTypesPacketAction {
	p := new(NocsysTypesPacketAction)
	*p = x
	return p
}

func (x NocsysTypesPacketAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NocsysTypesPacketAction) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[6].Descriptor()
}

func (NocsysTypesPacketAction) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[6]
}

func (x NocsysTypesPacketAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NocsysTypesPacketAction.Descriptor instead.
func (NocsysTypesPacketAction) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{6}
}

var File_enums_proto protoreflect.FileDescriptor

var file_enums_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x6f, 0x6e, 0x69, 0x63, 0x1a, 0x0e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x79, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2a, 0xb4, 0x02, 0x0a, 0x29, 0x4e, 0x6f, 0x63, 0x73, 0x79, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x73, 0x53, 0x4f, 0x4e, 0x49, 0x43, 0x48, 0x41, 0x52,
	0x44, 0x57, 0x41, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x12, 0x33,
	0x0a, 0x2f, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d,
	0x54, 0x59, 0x50, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x49, 0x43, 0x48, 0x41, 0x52, 0x44, 0x57, 0x41,
	0x52, 0x45, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x45,
	0x54, 0x10, 0x00, 0x12, 0x4e, 0x0a, 0x36, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x50, 0x4c, 0x41,
	0x54, 0x46, 0x4f, 0x52, 0x4d, 0x54, 0x59, 0x50, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x49, 0x43, 0x48,
	0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54,
	0x5f, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4c, 0x59, 0x10, 0xad, 0xa3,
	0xab, 0x41, 0x1a, 0x0f, 0x82, 0x41, 0x0c, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x5f, 0x53, 0x55, 0x50,
	0x50, 0x4c, 0x59, 0x12, 0x43, 0x0a, 0x30, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x50, 0x4c, 0x41,
	0x54, 0x46, 0x4f, 0x52, 0x4d, 0x54, 0x59, 0x50, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x49, 0x43, 0x48,
	0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x10, 0xfc, 0x90, 0x8c, 0xb3, 0x01, 0x1a, 0x09, 0x82,
	0x41, 0x06, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x12, 0x3d, 0x0a, 0x2d, 0x4e, 0x4f, 0x43, 0x53,
	0x59, 0x53, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x54, 0x59, 0x50, 0x45, 0x53, 0x53,
	0x4f, 0x4e, 0x49, 0x43, 0x48, 0x41, 0x52, 0x44, 0x57, 0x41, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x46, 0x41, 0x4e, 0x10, 0xa9, 0xd8, 0xa1, 0xca, 0x01, 0x1a,
	0x06, 0x82, 0x41, 0x03, 0x46, 0x41, 0x4e, 0x2a, 0xb9, 0x01, 0x0a, 0x29, 0x4e, 0x6f, 0x63, 0x73,
	0x79, 0x73, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x73, 0x53,
	0x4f, 0x4e, 0x49, 0x43, 0x53, 0x4f, 0x46, 0x54, 0x57, 0x41, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x50,
	0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x12, 0x33, 0x0a, 0x2f, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x50,
	0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x54, 0x59, 0x50, 0x45, 0x53, 0x53, 0x4f, 0x4e, 0x49,
	0x43, 0x53, 0x4f, 0x46, 0x54, 0x57, 0x41, 0x52, 0x45, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45,
	0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x57, 0x0a, 0x3a, 0x4e, 0x4f,
	0x43, 0x53, 0x59, 0x53, 0x50, 0x4c, 0x41, 0x54, 0x46, 0x4f, 0x52, 0x4d, 0x54, 0x59, 0x50, 0x45,
	0x53, 0x53, 0x4f, 0x4e, 0x49, 0x43, 0x53, 0x4f, 0x46, 0x54, 0x57, 0x41, 0x52, 0x45, 0x43, 0x4f,
	0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e,
	0x47, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0xa6, 0xc9, 0xcc, 0xfb, 0x01, 0x1a, 0x13,
	0x82, 0x41, 0x10, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x59, 0x53,
	0x54, 0x45, 0x4d, 0x2a, 0x8a, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x63, 0x73, 0x79, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x1c, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00,
	0x12, 0x24, 0x0a, 0x19, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x41,
	0x44, 0x4d, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x75, 0x70, 0x10, 0x01, 0x1a,
	0x05, 0x82, 0x41, 0x02, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x1b, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53,
	0x54, 0x59, 0x50, 0x45, 0x53, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x10, 0x02, 0x1a, 0x07, 0x82, 0x41, 0x04, 0x64, 0x6f, 0x77, 0x6e,
	0x2a, 0x82, 0x01, 0x0a, 0x13, 0x4e, 0x6f, 0x63, 0x73, 0x79, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x49, 0x70, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x19, 0x4e, 0x4f, 0x43, 0x53,
	0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f,
	0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x25, 0x0a, 0x18, 0x4e, 0x4f, 0x43, 0x53, 0x59,
	0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x46, 0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x49,
	0x50, 0x76, 0x34, 0x10, 0x01, 0x1a, 0x07, 0x82, 0x41, 0x04, 0x49, 0x50, 0x76, 0x34, 0x12, 0x25,
	0x0a, 0x18, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x46,
	0x41, 0x4d, 0x49, 0x4c, 0x59, 0x5f, 0x49, 0x50, 0x76, 0x36, 0x10, 0x02, 0x1a, 0x07, 0x82, 0x41,
	0x04, 0x49, 0x50, 0x76, 0x36, 0x2a, 0xb8, 0x03, 0x0a, 0x11, 0x4e, 0x6f, 0x63, 0x73, 0x79, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x49, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x4e,
	0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x15, 0x4e, 0x4f, 0x43, 0x53,
	0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4e,
	0x59, 0x10, 0x01, 0x1a, 0x06, 0x82, 0x41, 0x03, 0x41, 0x4e, 0x59, 0x12, 0x1f, 0x0a, 0x14, 0x4e,
	0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x50, 0x10, 0x02, 0x1a, 0x05, 0x82, 0x41, 0x02, 0x49, 0x50, 0x12, 0x27, 0x0a, 0x18,
	0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x10, 0x03, 0x1a, 0x09, 0x82, 0x41, 0x06, 0x4e,
	0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x12, 0x23, 0x0a, 0x16, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54,
	0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x50, 0x56, 0x34, 0x10,
	0x04, 0x1a, 0x07, 0x82, 0x41, 0x04, 0x49, 0x50, 0x56, 0x34, 0x12, 0x23, 0x0a, 0x16, 0x4e, 0x4f,
	0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x50, 0x56, 0x36, 0x10, 0x05, 0x1a, 0x07, 0x82, 0x41, 0x04, 0x49, 0x50, 0x56, 0x36, 0x12,
	0x29, 0x0a, 0x19, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x50, 0x76, 0x34, 0x41, 0x4e, 0x59, 0x10, 0x06, 0x1a, 0x0a,
	0x82, 0x41, 0x07, 0x49, 0x50, 0x76, 0x34, 0x41, 0x4e, 0x59, 0x12, 0x29, 0x0a, 0x19, 0x4e, 0x4f,
	0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x34, 0x10, 0x07, 0x1a, 0x0a, 0x82, 0x41, 0x07, 0x4e, 0x4f,
	0x4e, 0x5f, 0x49, 0x50, 0x34, 0x12, 0x29, 0x0a, 0x19, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54,
	0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x50, 0x76, 0x36, 0x41,
	0x4e, 0x59, 0x10, 0x08, 0x1a, 0x0a, 0x82, 0x41, 0x07, 0x49, 0x50, 0x76, 0x36, 0x41, 0x4e, 0x59,
	0x12, 0x2b, 0x0a, 0x1a, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49,
	0x50, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x76, 0x36, 0x10, 0x09,
	0x1a, 0x0b, 0x82, 0x41, 0x08, 0x4e, 0x4f, 0x4e, 0x5f, 0x49, 0x50, 0x76, 0x36, 0x12, 0x21, 0x0a,
	0x15, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x49, 0x50, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x52, 0x50, 0x10, 0x0a, 0x1a, 0x06, 0x82, 0x41, 0x03, 0x41, 0x52, 0x50,
	0x2a, 0x86, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x63, 0x73, 0x79, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x4f, 0x70, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f,
	0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x4f, 0x50, 0x45, 0x52, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x23, 0x0a, 0x18, 0x4e,
	0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x4f, 0x50, 0x45, 0x52, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x75, 0x70, 0x10, 0x01, 0x1a, 0x05, 0x82, 0x41, 0x02, 0x75, 0x70,
	0x12, 0x27, 0x0a, 0x1a, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x4f,
	0x50, 0x45, 0x52, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x10, 0x02,
	0x1a, 0x07, 0x82, 0x41, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x2a, 0xcb, 0x01, 0x0a, 0x17, 0x4e, 0x6f,
	0x63, 0x73, 0x79, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x1d, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54,
	0x59, 0x50, 0x45, 0x53, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x1c, 0x4e, 0x4f, 0x43, 0x53,
	0x59, 0x53, 0x54, 0x59, 0x50, 0x45, 0x53, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x52, 0x4f, 0x50, 0x10, 0x01, 0x1a, 0x07, 0x82, 0x41, 0x04, 0x44,
	0x52, 0x4f, 0x50, 0x12, 0x2f, 0x0a, 0x1f, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59, 0x50,
	0x45, 0x53, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46,
	0x4f, 0x52, 0x57, 0x41, 0x52, 0x44, 0x10, 0x02, 0x1a, 0x0a, 0x82, 0x41, 0x07, 0x46, 0x4f, 0x52,
	0x57, 0x41, 0x52, 0x44, 0x12, 0x31, 0x0a, 0x20, 0x4e, 0x4f, 0x43, 0x53, 0x59, 0x53, 0x54, 0x59,
	0x50, 0x45, 0x53, 0x50, 0x41, 0x43, 0x4b, 0x45, 0x54, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x52, 0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x10, 0x03, 0x1a, 0x0b, 0x82, 0x41, 0x08, 0x52,
	0x45, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x42, 0x1b, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6e,
	0x6f, 0x63, 0x73, 0x79, 0x73, 0x2e, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x5a, 0x07, 0x2e, 0x3b, 0x73,
	0x6f, 0x6e, 0x69, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enums_proto_rawDescOnce sync.Once
	file_enums_proto_rawDescData = file_enums_proto_rawDesc
)

func file_enums_proto_rawDescGZIP() []byte {
	file_enums_proto_rawDescOnce.Do(func() {
		file_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_enums_proto_rawDescData)
	})
	return file_enums_proto_rawDescData
}

var file_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 7)
var file_enums_proto_goTypes = []interface{}{
	(NocsysPlatformTypesSONICHARDWARECOMPONENT)(0), // 0: sonic.NocsysPlatformTypesSONICHARDWARECOMPONENT
	(NocsysPlatformTypesSONICSOFTWARECOMPONENT)(0), // 1: sonic.NocsysPlatformTypesSONICSOFTWARECOMPONENT
	(NocsysTypesAdminStatus)(0),                    // 2: sonic.NocsysTypesAdminStatus
	(NocsysTypesIpFamily)(0),                       // 3: sonic.NocsysTypesIpFamily
	(NocsysTypesIpType)(0),                         // 4: sonic.NocsysTypesIpType
	(NocsysTypesOperStatus)(0),                     // 5: sonic.NocsysTypesOperStatus
	(NocsysTypesPacketAction)(0),                   // 6: sonic.NocsysTypesPacketAction
}
var file_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_enums_proto_init() }
func file_enums_proto_init() {
	if File_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enums_proto_rawDesc,
			NumEnums:      7,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_enums_proto_goTypes,
		DependencyIndexes: file_enums_proto_depIdxs,
		EnumInfos:         file_enums_proto_enumTypes,
	}.Build()
	File_enums_proto = out.File
	file_enums_proto_rawDesc = nil
	file_enums_proto_goTypes = nil
	file_enums_proto_depIdxs = nil
}
