// openconfig.sonic_fdb is generated by proto_generator as a protobuf
// representation of a YANG schema.
//
// Input schema modules:
//  - ../api/yang/sonic/sonic-platform.yang
//  - ../api/yang/sonic/sonic-interface.yang
//  - ../api/yang/sonic/sonic-port.yang
//  - ../api/yang/sonic/sonic-ntp.yang
//  - ../api/yang/sonic/sonic-vrf.yang
//  - ../api/yang/sonic/third_party/ietf/ietf-interfaces.yang
//  - ../api/yang/sonic/third_party/ietf/ietf-yang-types.yang
//  - ../api/yang/sonic/third_party/ietf/ietf-inet-types.yang
//  - ../api/yang/sonic/third_party/ietf/iana-if-type.yang
//  - ../api/yang/sonic/sonic-loopback-interface.yang
//  - ../api/yang/sonic/sonic-platform-types.yang
//  - ../api/yang/sonic/sonic-neighbor.yang
//  - ../api/yang/sonic/sonic-route.yang
//  - ../api/yang/sonic/sonic-lldp.yang
//  - ../api/yang/sonic/sonic-vlan.yang
//  - ../api/yang/sonic/sonic-portchannel.yang
//  - ../api/yang/sonic/sonic-extension.yang
//  - ../api/yang/sonic/sonic-mirror-session.yang
//  - ../api/yang/sonic/sonic-vxlan.yang
//  - ../api/yang/sonic/sonic-fdb.yang
//  - ../api/yang/sonic/sonic-acl.yang
//  - ../api/yang/sonic/sonic-types.yang

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: sonic_fdb.proto

package sonic

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/openconfig/ygot/proto/yext"
	ywrapper "github.com/openconfig/ygot/proto/ywrapper"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type SonicFdb_Fdb_FdbList_Type int32

const (
	SonicFdb_Fdb_FdbList_TYPE_UNSET   SonicFdb_Fdb_FdbList_Type = 0
	SonicFdb_Fdb_FdbList_TYPE_STATIC  SonicFdb_Fdb_FdbList_Type = 1
	SonicFdb_Fdb_FdbList_TYPE_DYNAMIC SonicFdb_Fdb_FdbList_Type = 2
)

// Enum value maps for SonicFdb_Fdb_FdbList_Type.
var (
	SonicFdb_Fdb_FdbList_Type_name = map[int32]string{
		0: "TYPE_UNSET",
		1: "TYPE_STATIC",
		2: "TYPE_DYNAMIC",
	}
	SonicFdb_Fdb_FdbList_Type_value = map[string]int32{
		"TYPE_UNSET":   0,
		"TYPE_STATIC":  1,
		"TYPE_DYNAMIC": 2,
	}
)

func (x SonicFdb_Fdb_FdbList_Type) Enum() *SonicFdb_Fdb_FdbList_Type {
	p := new(SonicFdb_Fdb_FdbList_Type)
	*p = x
	return p
}

func (x SonicFdb_Fdb_FdbList_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SonicFdb_Fdb_FdbList_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_sonic_fdb_proto_enumTypes[0].Descriptor()
}

func (SonicFdb_Fdb_FdbList_Type) Type() protoreflect.EnumType {
	return &file_sonic_fdb_proto_enumTypes[0]
}

func (x SonicFdb_Fdb_FdbList_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SonicFdb_Fdb_FdbList_Type.Descriptor instead.
func (SonicFdb_Fdb_FdbList_Type) EnumDescriptor() ([]byte, []int) {
	return file_sonic_fdb_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type SonicFdb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fdb *SonicFdb_Fdb `protobuf:"bytes,1,opt,name=fdb,proto3" json:"fdb,omitempty"`
}

func (x *SonicFdb) Reset() {
	*x = SonicFdb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonic_fdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SonicFdb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SonicFdb) ProtoMessage() {}

func (x *SonicFdb) ProtoReflect() protoreflect.Message {
	mi := &file_sonic_fdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SonicFdb.ProtoReflect.Descriptor instead.
func (*SonicFdb) Descriptor() ([]byte, []int) {
	return file_sonic_fdb_proto_rawDescGZIP(), []int{0}
}

func (x *SonicFdb) GetFdb() *SonicFdb_Fdb {
	if x != nil {
		return x.Fdb
	}
	return nil
}

type SonicFdb_Fdb struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FdbList []*SonicFdb_Fdb_FdbListKey `protobuf:"bytes,1,rep,name=fdb_list,json=fdbList,proto3" json:"fdb_list,omitempty"`
}

func (x *SonicFdb_Fdb) Reset() {
	*x = SonicFdb_Fdb{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonic_fdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SonicFdb_Fdb) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SonicFdb_Fdb) ProtoMessage() {}

func (x *SonicFdb_Fdb) ProtoReflect() protoreflect.Message {
	mi := &file_sonic_fdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SonicFdb_Fdb.ProtoReflect.Descriptor instead.
func (*SonicFdb_Fdb) Descriptor() ([]byte, []int) {
	return file_sonic_fdb_proto_rawDescGZIP(), []int{0, 0}
}

func (x *SonicFdb_Fdb) GetFdbList() []*SonicFdb_Fdb_FdbListKey {
	if x != nil {
		return x.FdbList
	}
	return nil
}

type SonicFdb_Fdb_FdbList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port *ywrapper.StringValue     `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Type SonicFdb_Fdb_FdbList_Type `protobuf:"varint,2,opt,name=type,proto3,enum=sonic.SonicFdb_Fdb_FdbList_Type" json:"type,omitempty"`
}

func (x *SonicFdb_Fdb_FdbList) Reset() {
	*x = SonicFdb_Fdb_FdbList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonic_fdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SonicFdb_Fdb_FdbList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SonicFdb_Fdb_FdbList) ProtoMessage() {}

func (x *SonicFdb_Fdb_FdbList) ProtoReflect() protoreflect.Message {
	mi := &file_sonic_fdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SonicFdb_Fdb_FdbList.ProtoReflect.Descriptor instead.
func (*SonicFdb_Fdb_FdbList) Descriptor() ([]byte, []int) {
	return file_sonic_fdb_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *SonicFdb_Fdb_FdbList) GetPort() *ywrapper.StringValue {
	if x != nil {
		return x.Port
	}
	return nil
}

func (x *SonicFdb_Fdb_FdbList) GetType() SonicFdb_Fdb_FdbList_Type {
	if x != nil {
		return x.Type
	}
	return SonicFdb_Fdb_FdbList_TYPE_UNSET
}

type SonicFdb_Fdb_FdbListKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FdbName string                `protobuf:"bytes,1,opt,name=fdb_name,json=fdbName,proto3" json:"fdb_name,omitempty"`
	FdbList *SonicFdb_Fdb_FdbList `protobuf:"bytes,2,opt,name=fdb_list,json=fdbList,proto3" json:"fdb_list,omitempty"`
}

func (x *SonicFdb_Fdb_FdbListKey) Reset() {
	*x = SonicFdb_Fdb_FdbListKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sonic_fdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SonicFdb_Fdb_FdbListKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SonicFdb_Fdb_FdbListKey) ProtoMessage() {}

func (x *SonicFdb_Fdb_FdbListKey) ProtoReflect() protoreflect.Message {
	mi := &file_sonic_fdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SonicFdb_Fdb_FdbListKey.ProtoReflect.Descriptor instead.
func (*SonicFdb_Fdb_FdbListKey) Descriptor() ([]byte, []int) {
	return file_sonic_fdb_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *SonicFdb_Fdb_FdbListKey) GetFdbName() string {
	if x != nil {
		return x.FdbName
	}
	return ""
}

func (x *SonicFdb_Fdb_FdbListKey) GetFdbList() *SonicFdb_Fdb_FdbList {
	if x != nil {
		return x.FdbList
	}
	return nil
}

var File_sonic_fdb_proto protoreflect.FileDescriptor

var file_sonic_fdb_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x5f, 0x66, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x1a, 0x0e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x79, 0x65, 0x78, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x04, 0x0a, 0x08, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x46, 0x64,
	0x62, 0x12, 0x38, 0x0a, 0x03, 0x66, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x2e, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x46, 0x64, 0x62, 0x2e,
	0x46, 0x64, 0x62, 0x42, 0x11, 0x82, 0x41, 0x0e, 0x2f, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x2d, 0x66,
	0x64, 0x62, 0x2f, 0x66, 0x64, 0x62, 0x52, 0x03, 0x66, 0x64, 0x62, 0x1a, 0xe4, 0x03, 0x0a, 0x03,
	0x46, 0x64, 0x62, 0x12, 0x55, 0x0a, 0x08, 0x66, 0x64, 0x62, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x2e, 0x53, 0x6f,
	0x6e, 0x69, 0x63, 0x46, 0x64, 0x62, 0x2e, 0x46, 0x64, 0x62, 0x2e, 0x46, 0x64, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x4b, 0x65, 0x79, 0x42, 0x1a, 0x82, 0x41, 0x17, 0x2f, 0x73, 0x6f, 0x6e, 0x69, 0x63,
	0x2d, 0x66, 0x64, 0x62, 0x2f, 0x66, 0x64, 0x62, 0x2f, 0x66, 0x64, 0x62, 0x2d, 0x6c, 0x69, 0x73,
	0x74, 0x52, 0x07, 0x66, 0x64, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0xfe, 0x01, 0x0a, 0x07, 0x46,
	0x64, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x1f, 0x82, 0x41, 0x1c,
	0x2f, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x2d, 0x66, 0x64, 0x62, 0x2f, 0x66, 0x64, 0x62, 0x2f, 0x66,
	0x64, 0x62, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x55, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x2e, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x46, 0x64,
	0x62, 0x2e, 0x46, 0x64, 0x62, 0x2e, 0x46, 0x64, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x1f, 0x82, 0x41, 0x1c, 0x2f, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x2d, 0x66, 0x64,
	0x62, 0x2f, 0x66, 0x64, 0x62, 0x2f, 0x66, 0x64, 0x62, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x50, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10,
	0x00, 0x12, 0x1a, 0x0a, 0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43,
	0x10, 0x01, 0x1a, 0x09, 0x82, 0x41, 0x06, 0x53, 0x54, 0x41, 0x54, 0x49, 0x43, 0x12, 0x1c, 0x0a,
	0x0c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x10, 0x02, 0x1a,
	0x0a, 0x82, 0x41, 0x07, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x1a, 0x84, 0x01, 0x0a, 0x0a,
	0x46, 0x64, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x08, 0x66, 0x64,
	0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0x82, 0x41,
	0x20, 0x2f, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x2d, 0x66, 0x64, 0x62, 0x2f, 0x66, 0x64, 0x62, 0x2f,
	0x66, 0x64, 0x62, 0x2d, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x66, 0x64, 0x62, 0x2d, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x07, 0x66, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x66, 0x64,
	0x62, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x6f, 0x6e, 0x69, 0x63, 0x2e, 0x53, 0x6f, 0x6e, 0x69, 0x63, 0x46, 0x64, 0x62, 0x2e, 0x46, 0x64,
	0x62, 0x2e, 0x46, 0x64, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x07, 0x66, 0x64, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x1b, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x63, 0x73, 0x79, 0x73,
	0x2e, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x5a, 0x07, 0x2e, 0x3b, 0x73, 0x6f, 0x6e, 0x69, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sonic_fdb_proto_rawDescOnce sync.Once
	file_sonic_fdb_proto_rawDescData = file_sonic_fdb_proto_rawDesc
)

func file_sonic_fdb_proto_rawDescGZIP() []byte {
	file_sonic_fdb_proto_rawDescOnce.Do(func() {
		file_sonic_fdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_sonic_fdb_proto_rawDescData)
	})
	return file_sonic_fdb_proto_rawDescData
}

var file_sonic_fdb_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sonic_fdb_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_sonic_fdb_proto_goTypes = []interface{}{
	(SonicFdb_Fdb_FdbList_Type)(0),  // 0: sonic.SonicFdb.Fdb.FdbList.Type
	(*SonicFdb)(nil),                // 1: sonic.SonicFdb
	(*SonicFdb_Fdb)(nil),            // 2: sonic.SonicFdb.Fdb
	(*SonicFdb_Fdb_FdbList)(nil),    // 3: sonic.SonicFdb.Fdb.FdbList
	(*SonicFdb_Fdb_FdbListKey)(nil), // 4: sonic.SonicFdb.Fdb.FdbListKey
	(*ywrapper.StringValue)(nil),    // 5: ywrapper.StringValue
}
var file_sonic_fdb_proto_depIdxs = []int32{
	2, // 0: sonic.SonicFdb.fdb:type_name -> sonic.SonicFdb.Fdb
	4, // 1: sonic.SonicFdb.Fdb.fdb_list:type_name -> sonic.SonicFdb.Fdb.FdbListKey
	5, // 2: sonic.SonicFdb.Fdb.FdbList.port:type_name -> ywrapper.StringValue
	0, // 3: sonic.SonicFdb.Fdb.FdbList.type:type_name -> sonic.SonicFdb.Fdb.FdbList.Type
	3, // 4: sonic.SonicFdb.Fdb.FdbListKey.fdb_list:type_name -> sonic.SonicFdb.Fdb.FdbList
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_sonic_fdb_proto_init() }
func file_sonic_fdb_proto_init() {
	if File_sonic_fdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sonic_fdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SonicFdb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonic_fdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SonicFdb_Fdb); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonic_fdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SonicFdb_Fdb_FdbList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sonic_fdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SonicFdb_Fdb_FdbListKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sonic_fdb_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_sonic_fdb_proto_goTypes,
		DependencyIndexes: file_sonic_fdb_proto_depIdxs,
		EnumInfos:         file_sonic_fdb_proto_enumTypes,
		MessageInfos:      file_sonic_fdb_proto_msgTypes,
	}.Build()
	File_sonic_fdb_proto = out.File
	file_sonic_fdb_proto_rawDesc = nil
	file_sonic_fdb_proto_goTypes = nil
	file_sonic_fdb_proto_depIdxs = nil
}
