// openconfig.openconfig_transport_line_connectivity is generated by proto_generator as a protobuf
// representation of a YANG schema.
//
// Input schema modules:
//  - ../api/yang/public/doc/openconfig-example.yang
//  - ../api/yang/public/third_party/ietf/iana-if-type.yang
//  - ../api/yang/public/third_party/ietf/ietf-interfaces.yang
//  - ../api/yang/public/third_party/ietf/ietf-yang-types.yang
//  - ../api/yang/public/third_party/ietf/ietf-inet-types.yang
//  - ../api/yang/public/release/models/bfd/openconfig-bfd.yang
//  - ../api/yang/public/release/models/vlan/openconfig-vlan.yang
//  - ../api/yang/public/release/models/vlan/openconfig-vlan-types.yang
//  - ../api/yang/public/release/models/wifi/openconfig-access-points.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-mac.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-types.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-phy.yang
//  - ../api/yang/public/release/models/wifi/openconfig-ap-interfaces.yang
//  - ../api/yang/public/release/models/wifi/openconfig-ap-manager.yang
//  - ../api/yang/public/release/models/macsec/openconfig-macsec.yang
//  - ../api/yang/public/release/models/macsec/openconfig-macsec-types.yang
//  - ../api/yang/public/release/models/stp/openconfig-spanning-tree-types.yang
//  - ../api/yang/public/release/models/stp/openconfig-spanning-tree.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-errors.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-peer-group.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-types.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-global.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-neighbor.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common-structure.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-policy.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common-multiprotocol.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-types.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-port.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-fan.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-linecard.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-ext.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-cpu.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-psu.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-transceiver.yang
//  - ../api/yang/public/release/models/multicast/openconfig-pim-types.yang
//  - ../api/yang/public/release/models/multicast/openconfig-igmp-types.yang
//  - ../api/yang/public/release/models/multicast/openconfig-igmp.yang
//  - ../api/yang/public/release/models/multicast/openconfig-pim.yang
//  - ../api/yang/public/release/models/catalog/openconfig-module-catalog.yang
//  - ../api/yang/public/release/models/catalog/openconfig-catalog-types.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-interfaces.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-8021x.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-types.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-aggregate.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-poe.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-tunnel.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ip.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ethernet.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ethernet-ext.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ip-ext.yang
//  - ../api/yang/public/release/models/acl/openconfig-packet-match-types.yang
//  - ../api/yang/public/release/models/acl/openconfig-packet-match.yang
//  - ../api/yang/public/release/models/acl/openconfig-acl.yang
//  - ../api/yang/public/release/models/system/openconfig-license.yang
//  - ../api/yang/public/release/models/system/openconfig-system.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-radius.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa.yang
//  - ../api/yang/public/release/models/system/openconfig-system-management.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-types.yang
//  - ../api/yang/public/release/models/system/openconfig-procmon.yang
//  - ../api/yang/public/release/models/system/openconfig-messages.yang
//  - ../api/yang/public/release/models/system/openconfig-system-terminal.yang
//  - ../api/yang/public/release/models/system/openconfig-system-logging.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-tacacs.yang
//  - ../api/yang/public/release/models/system/openconfig-alarms.yang
//  - ../api/yang/public/release/models/system/openconfig-alarm-types.yang
//  - ../api/yang/public/release/models/policy/openconfig-policy-types.yang
//  - ../api/yang/public/release/models/policy/openconfig-routing-policy.yang
//  - ../api/yang/public/release/models/lacp/openconfig-lacp.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-wavelength-router.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-optical-amplifier.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-protection.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-channel-monitor.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-connectivity.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-optical-attenuator.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-common.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-types.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-terminal-device.yang
//  - ../api/yang/public/release/models/telemetry/openconfig-telemetry-types.yang
//  - ../api/yang/public/release/models/telemetry/openconfig-telemetry.yang
//  - ../api/yang/public/release/models/openflow/openconfig-openflow.yang
//  - ../api/yang/public/release/models/openflow/openconfig-openflow-types.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-tables.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-ext.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-table-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-shared-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-types.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-types.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-elements.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-interfaces.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-srte.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-forwarding-policies.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-interfaces.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-path-groups.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
//  - ../api/yang/public/release/models/relay-agent/openconfig-relay-agent.yang
//  - ../api/yang/public/release/models/lldp/openconfig-lldp.yang
//  - ../api/yang/public/release/models/lldp/openconfig-lldp-types.yang
//  - ../api/yang/public/release/models/openconfig-extensions.yang
//  - ../api/yang/public/release/models/types/openconfig-yang-types.yang
//  - ../api/yang/public/release/models/types/openconfig-inet-types.yang
//  - ../api/yang/public/release/models/types/openconfig-types.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-srte-policy.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-rsvp-sr-ext.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-segment-routing-types.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-segment-routing.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-types.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-igp.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-te.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-rsvp.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-static.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-sr.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-ldp.yang
//  - ../api/yang/public/release/models/probes/openconfig-probes-types.yang
//  - ../api/yang/public/release/models/probes/openconfig-probes.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-lsp.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-lsdb-types.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-policy.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-types.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-routing.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-area.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospf-policy.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-common.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-global.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-area-interface.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-lsdb.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospf-types.yang
//  - ../api/yang/public/release/models/local-routing/openconfig-local-routing.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-l3.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-l2.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-policy.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-types.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-mpls.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-common.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-types.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ipv6.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-pf.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-network-instance.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ipv4.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ethernet.yang

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: openconfig_transport_line_connectivity.proto

package openconfig

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/openconfig/ygot/proto/yext"
	ywrapper "github.com/openconfig/ygot/proto/ywrapper"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Connections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection []*Connections_ConnectionKey `protobuf:"bytes,158755704,rep,name=connection,proto3" json:"connection,omitempty"`
}

func (x *Connections) Reset() {
	*x = Connections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connections) ProtoMessage() {}

func (x *Connections) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connections.ProtoReflect.Descriptor instead.
func (*Connections) Descriptor() ([]byte, []int) {
	return file_openconfig_transport_line_connectivity_proto_rawDescGZIP(), []int{0}
}

func (x *Connections) GetConnection() []*Connections_ConnectionKey {
	if x != nil {
		return x.Connection
	}
	return nil
}

type Connections_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *Connections_Connection_Config `protobuf:"bytes,44092925,opt,name=config,proto3" json:"config,omitempty"`
	State  *Connections_Connection_State  `protobuf:"bytes,281824626,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *Connections_Connection) Reset() {
	*x = Connections_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connections_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connections_Connection) ProtoMessage() {}

func (x *Connections_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connections_Connection.ProtoReflect.Descriptor instead.
func (*Connections_Connection) Descriptor() ([]byte, []int) {
	return file_openconfig_transport_line_connectivity_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Connections_Connection) GetConfig() *Connections_Connection_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Connections_Connection) GetState() *Connections_Connection_State {
	if x != nil {
		return x.State
	}
	return nil
}

type Connections_ConnectionKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index      uint64                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Connection *Connections_Connection `protobuf:"bytes,2,opt,name=connection,proto3" json:"connection,omitempty"`
}

func (x *Connections_ConnectionKey) Reset() {
	*x = Connections_ConnectionKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connections_ConnectionKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connections_ConnectionKey) ProtoMessage() {}

func (x *Connections_ConnectionKey) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connections_ConnectionKey.ProtoReflect.Descriptor instead.
func (*Connections_ConnectionKey) Descriptor() ([]byte, []int) {
	return file_openconfig_transport_line_connectivity_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Connections_ConnectionKey) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Connections_ConnectionKey) GetConnection() *Connections_Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

type Connections_Connection_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Dest:
	//	*Connections_Connection_Config_DestOpenconfigtransportlineconnectivityportconnectiontype
	//	*Connections_Connection_Config_DestString
	Dest      isConnections_Connection_Config_Dest    `protobuf_oneof:"dest"`
	FiberType OpenconfigTransportTypesFIBERJUMPERTYPE `protobuf:"varint,313886879,opt,name=fiber_type,json=fiberType,proto3,enum=openconfig.OpenconfigTransportTypesFIBERJUMPERTYPE" json:"fiber_type,omitempty"`
	Index     *ywrapper.UintValue                     `protobuf:"bytes,225818108,opt,name=index,proto3" json:"index,omitempty"`
	// Types that are assignable to Source:
	//	*Connections_Connection_Config_SourceOpenconfigtransportlineconnectivityportconnectiontype
	//	*Connections_Connection_Config_SourceString
	Source isConnections_Connection_Config_Source `protobuf_oneof:"source"`
}

func (x *Connections_Connection_Config) Reset() {
	*x = Connections_Connection_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connections_Connection_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connections_Connection_Config) ProtoMessage() {}

func (x *Connections_Connection_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connections_Connection_Config.ProtoReflect.Descriptor instead.
func (*Connections_Connection_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_transport_line_connectivity_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (m *Connections_Connection_Config) GetDest() isConnections_Connection_Config_Dest {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (x *Connections_Connection_Config) GetDestOpenconfigtransportlineconnectivityportconnectiontype() OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE {
	if x, ok := x.GetDest().(*Connections_Connection_Config_DestOpenconfigtransportlineconnectivityportconnectiontype); ok {
		return x.DestOpenconfigtransportlineconnectivityportconnectiontype
	}
	return OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE_OPENCONFIGTRANSPORTLINECONNECTIVITYPORTCONNECTIONTYPE_UNSET
}

func (x *Connections_Connection_Config) GetDestString() string {
	if x, ok := x.GetDest().(*Connections_Connection_Config_DestString); ok {
		return x.DestString
	}
	return ""
}

func (x *Connections_Connection_Config) GetFiberType() OpenconfigTransportTypesFIBERJUMPERTYPE {
	if x != nil {
		return x.FiberType
	}
	return OpenconfigTransportTypesFIBERJUMPERTYPE_OPENCONFIGTRANSPORTTYPESFIBERJUMPERTYPE_UNSET
}

func (x *Connections_Connection_Config) GetIndex() *ywrapper.UintValue {
	if x != nil {
		return x.Index
	}
	return nil
}

func (m *Connections_Connection_Config) GetSource() isConnections_Connection_Config_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *Connections_Connection_Config) GetSourceOpenconfigtransportlineconnectivityportconnectiontype() OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE {
	if x, ok := x.GetSource().(*Connections_Connection_Config_SourceOpenconfigtransportlineconnectivityportconnectiontype); ok {
		return x.SourceOpenconfigtransportlineconnectivityportconnectiontype
	}
	return OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE_OPENCONFIGTRANSPORTLINECONNECTIVITYPORTCONNECTIONTYPE_UNSET
}

func (x *Connections_Connection_Config) GetSourceString() string {
	if x, ok := x.GetSource().(*Connections_Connection_Config_SourceString); ok {
		return x.SourceString
	}
	return ""
}

type isConnections_Connection_Config_Dest interface {
	isConnections_Connection_Config_Dest()
}

type Connections_Connection_Config_DestOpenconfigtransportlineconnectivityportconnectiontype struct {
	DestOpenconfigtransportlineconnectivityportconnectiontype OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE `protobuf:"varint,155410982,opt,name=dest_openconfigtransportlineconnectivityportconnectiontype,json=destOpenconfigtransportlineconnectivityportconnectiontype,proto3,enum=openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE,oneof"`
}

type Connections_Connection_Config_DestString struct {
	DestString string `protobuf:"bytes,153532524,opt,name=dest_string,json=destString,proto3,oneof"`
}

func (*Connections_Connection_Config_DestOpenconfigtransportlineconnectivityportconnectiontype) isConnections_Connection_Config_Dest() {
}

func (*Connections_Connection_Config_DestString) isConnections_Connection_Config_Dest() {}

type isConnections_Connection_Config_Source interface {
	isConnections_Connection_Config_Source()
}

type Connections_Connection_Config_SourceOpenconfigtransportlineconnectivityportconnectiontype struct {
	SourceOpenconfigtransportlineconnectivityportconnectiontype OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE `protobuf:"varint,319098941,opt,name=source_openconfigtransportlineconnectivityportconnectiontype,json=sourceOpenconfigtransportlineconnectivityportconnectiontype,proto3,enum=openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE,oneof"`
}

type Connections_Connection_Config_SourceString struct {
	SourceString string `protobuf:"bytes,315283997,opt,name=source_string,json=sourceString,proto3,oneof"`
}

func (*Connections_Connection_Config_SourceOpenconfigtransportlineconnectivityportconnectiontype) isConnections_Connection_Config_Source() {
}

func (*Connections_Connection_Config_SourceString) isConnections_Connection_Config_Source() {}

type Connections_Connection_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Dest:
	//	*Connections_Connection_State_DestOpenconfigtransportlineconnectivityportconnectiontype
	//	*Connections_Connection_State_DestString
	Dest      isConnections_Connection_State_Dest     `protobuf_oneof:"dest"`
	FiberType OpenconfigTransportTypesFIBERJUMPERTYPE `protobuf:"varint,123075218,opt,name=fiber_type,json=fiberType,proto3,enum=openconfig.OpenconfigTransportTypesFIBERJUMPERTYPE" json:"fiber_type,omitempty"`
	Index     *ywrapper.UintValue                     `protobuf:"bytes,509947659,opt,name=index,proto3" json:"index,omitempty"`
	// Types that are assignable to Source:
	//	*Connections_Connection_State_SourceOpenconfigtransportlineconnectivityportconnectiontype
	//	*Connections_Connection_State_SourceString
	Source isConnections_Connection_State_Source `protobuf_oneof:"source"`
}

func (x *Connections_Connection_State) Reset() {
	*x = Connections_Connection_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connections_Connection_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connections_Connection_State) ProtoMessage() {}

func (x *Connections_Connection_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_transport_line_connectivity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connections_Connection_State.ProtoReflect.Descriptor instead.
func (*Connections_Connection_State) Descriptor() ([]byte, []int) {
	return file_openconfig_transport_line_connectivity_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (m *Connections_Connection_State) GetDest() isConnections_Connection_State_Dest {
	if m != nil {
		return m.Dest
	}
	return nil
}

func (x *Connections_Connection_State) GetDestOpenconfigtransportlineconnectivityportconnectiontype() OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE {
	if x, ok := x.GetDest().(*Connections_Connection_State_DestOpenconfigtransportlineconnectivityportconnectiontype); ok {
		return x.DestOpenconfigtransportlineconnectivityportconnectiontype
	}
	return OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE_OPENCONFIGTRANSPORTLINECONNECTIVITYPORTCONNECTIONTYPE_UNSET
}

func (x *Connections_Connection_State) GetDestString() string {
	if x, ok := x.GetDest().(*Connections_Connection_State_DestString); ok {
		return x.DestString
	}
	return ""
}

func (x *Connections_Connection_State) GetFiberType() OpenconfigTransportTypesFIBERJUMPERTYPE {
	if x != nil {
		return x.FiberType
	}
	return OpenconfigTransportTypesFIBERJUMPERTYPE_OPENCONFIGTRANSPORTTYPESFIBERJUMPERTYPE_UNSET
}

func (x *Connections_Connection_State) GetIndex() *ywrapper.UintValue {
	if x != nil {
		return x.Index
	}
	return nil
}

func (m *Connections_Connection_State) GetSource() isConnections_Connection_State_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (x *Connections_Connection_State) GetSourceOpenconfigtransportlineconnectivityportconnectiontype() OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE {
	if x, ok := x.GetSource().(*Connections_Connection_State_SourceOpenconfigtransportlineconnectivityportconnectiontype); ok {
		return x.SourceOpenconfigtransportlineconnectivityportconnectiontype
	}
	return OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE_OPENCONFIGTRANSPORTLINECONNECTIVITYPORTCONNECTIONTYPE_UNSET
}

func (x *Connections_Connection_State) GetSourceString() string {
	if x, ok := x.GetSource().(*Connections_Connection_State_SourceString); ok {
		return x.SourceString
	}
	return ""
}

type isConnections_Connection_State_Dest interface {
	isConnections_Connection_State_Dest()
}

type Connections_Connection_State_DestOpenconfigtransportlineconnectivityportconnectiontype struct {
	DestOpenconfigtransportlineconnectivityportconnectiontype OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE `protobuf:"varint,448062287,opt,name=dest_openconfigtransportlineconnectivityportconnectiontype,json=destOpenconfigtransportlineconnectivityportconnectiontype,proto3,enum=openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE,oneof"`
}

type Connections_Connection_State_DestString struct {
	DestString string `protobuf:"bytes,20427123,opt,name=dest_string,json=destString,proto3,oneof"`
}

func (*Connections_Connection_State_DestOpenconfigtransportlineconnectivityportconnectiontype) isConnections_Connection_State_Dest() {
}

func (*Connections_Connection_State_DestString) isConnections_Connection_State_Dest() {}

type isConnections_Connection_State_Source interface {
	isConnections_Connection_State_Source()
}

type Connections_Connection_State_SourceOpenconfigtransportlineconnectivityportconnectiontype struct {
	SourceOpenconfigtransportlineconnectivityportconnectiontype OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE `protobuf:"varint,162921000,opt,name=source_openconfigtransportlineconnectivityportconnectiontype,json=sourceOpenconfigtransportlineconnectivityportconnectiontype,proto3,enum=openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE,oneof"`
}

type Connections_Connection_State_SourceString struct {
	SourceString string `protobuf:"bytes,145249202,opt,name=source_string,json=sourceString,proto3,oneof"`
}

func (*Connections_Connection_State_SourceOpenconfigtransportlineconnectivityportconnectiontype) isConnections_Connection_State_Source() {
}

func (*Connections_Connection_State_SourceString) isConnections_Connection_State_Source() {}

var File_openconfig_transport_line_connectivity_proto protoreflect.FileDescriptor

var file_openconfig_transport_line_connectivity_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0e, 0x79, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x79, 0x65, 0x78, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d,
	0x0f, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x64,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xf8, 0xd6, 0xd9,
	0x4b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x42, 0x1a, 0x82, 0x41,
	0x17, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x99, 0x0d, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xfd, 0x9b,
	0x83, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x21, 0x82, 0x41, 0x1e, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x64, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0xf2, 0x9a, 0xb1, 0x86, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x20, 0x82, 0x41, 0x1d, 0x2f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x1a, 0xde, 0x05, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xc5, 0x01,
	0x0a, 0x3a, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x18, 0xa6, 0xc4, 0x8d,
	0x4a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x4f, 0x52, 0x54, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x54, 0x59, 0x50, 0x45, 0x48, 0x00, 0x52, 0x39, 0x64, 0x65, 0x73, 0x74,
	0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0xec, 0xf0, 0x9a, 0x49, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x84, 0x01, 0x0a, 0x0a,
	0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x9f, 0x91, 0xd6, 0x95, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x46, 0x49, 0x42, 0x45, 0x52, 0x4a,
	0x55, 0x4d, 0x50, 0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x42, 0x2c, 0x82, 0x41, 0x29, 0x2f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x66, 0x69, 0x62,
	0x65, 0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x62, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x55, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0xfc, 0xeb, 0xd6, 0x6b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x55, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x27, 0x82, 0x41, 0x24, 0x2f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0xca, 0x01, 0x0a, 0x3c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x18, 0xbd, 0xa0, 0x94, 0x98, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x4f, 0x52, 0x54, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x54, 0x59, 0x50, 0x45, 0x48, 0x01, 0x52, 0x3b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x9d, 0xb4, 0xab, 0x96, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x1a, 0xda, 0x05, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0xc6, 0x01,
	0x0a, 0x3a, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x18, 0xcf, 0xc6, 0xd3,
	0xd5, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x4f, 0x52, 0x54, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x54, 0x59, 0x50, 0x45, 0x48, 0x00, 0x52, 0x39, 0x64, 0x65, 0x73,
	0x74, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0xf3, 0xe2, 0xde, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0a, 0x64, 0x65, 0x73, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x82, 0x01, 0x0a,
	0x0a, 0x66, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x92, 0xf5, 0xd7, 0x3a,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x46, 0x49, 0x42, 0x45, 0x52, 0x4a,
	0x55, 0x4d, 0x50, 0x45, 0x52, 0x54, 0x59, 0x50, 0x45, 0x42, 0x2b, 0x82, 0x41, 0x28, 0x2f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x66, 0x69, 0x62, 0x65,
	0x72, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x52, 0x09, 0x66, 0x69, 0x62, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x55, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x8b, 0xde, 0x94, 0xf3, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x55, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x26, 0x82, 0x41, 0x23, 0x2f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0xc9, 0x01, 0x0a, 0x3c, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x74, 0x79, 0x70, 0x65, 0x18, 0xa8, 0xf4, 0xd7, 0x4d, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x41, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x50, 0x4f, 0x52, 0x54, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x54, 0x59, 0x50, 0x45, 0x48, 0x01, 0x52, 0x3b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f,
	0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x70, 0x6f, 0x72, 0x74, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0xb2, 0xa7, 0xa1, 0x45, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x06,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x1a, 0x8b, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x20, 0x82, 0x41, 0x1d, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x42, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x17,
	0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x63, 0x73, 0x79, 0x73, 0x2e, 0x6f, 0x70, 0x65,
	0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_openconfig_transport_line_connectivity_proto_rawDescOnce sync.Once
	file_openconfig_transport_line_connectivity_proto_rawDescData = file_openconfig_transport_line_connectivity_proto_rawDesc
)

func file_openconfig_transport_line_connectivity_proto_rawDescGZIP() []byte {
	file_openconfig_transport_line_connectivity_proto_rawDescOnce.Do(func() {
		file_openconfig_transport_line_connectivity_proto_rawDescData = protoimpl.X.CompressGZIP(file_openconfig_transport_line_connectivity_proto_rawDescData)
	})
	return file_openconfig_transport_line_connectivity_proto_rawDescData
}

var file_openconfig_transport_line_connectivity_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_openconfig_transport_line_connectivity_proto_goTypes = []interface{}{
	(*Connections)(nil),                                        // 0: openconfig.Connections
	(*Connections_Connection)(nil),                             // 1: openconfig.Connections.Connection
	(*Connections_ConnectionKey)(nil),                          // 2: openconfig.Connections.ConnectionKey
	(*Connections_Connection_Config)(nil),                      // 3: openconfig.Connections.Connection.Config
	(*Connections_Connection_State)(nil),                       // 4: openconfig.Connections.Connection.State
	(OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE)(0), // 5: openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE
	(OpenconfigTransportTypesFIBERJUMPERTYPE)(0),               // 6: openconfig.OpenconfigTransportTypesFIBERJUMPERTYPE
	(*ywrapper.UintValue)(nil),                                 // 7: ywrapper.UintValue
}
var file_openconfig_transport_line_connectivity_proto_depIdxs = []int32{
	2,  // 0: openconfig.Connections.connection:type_name -> openconfig.Connections.ConnectionKey
	3,  // 1: openconfig.Connections.Connection.config:type_name -> openconfig.Connections.Connection.Config
	4,  // 2: openconfig.Connections.Connection.state:type_name -> openconfig.Connections.Connection.State
	1,  // 3: openconfig.Connections.ConnectionKey.connection:type_name -> openconfig.Connections.Connection
	5,  // 4: openconfig.Connections.Connection.Config.dest_openconfigtransportlineconnectivityportconnectiontype:type_name -> openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE
	6,  // 5: openconfig.Connections.Connection.Config.fiber_type:type_name -> openconfig.OpenconfigTransportTypesFIBERJUMPERTYPE
	7,  // 6: openconfig.Connections.Connection.Config.index:type_name -> ywrapper.UintValue
	5,  // 7: openconfig.Connections.Connection.Config.source_openconfigtransportlineconnectivityportconnectiontype:type_name -> openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE
	5,  // 8: openconfig.Connections.Connection.State.dest_openconfigtransportlineconnectivityportconnectiontype:type_name -> openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE
	6,  // 9: openconfig.Connections.Connection.State.fiber_type:type_name -> openconfig.OpenconfigTransportTypesFIBERJUMPERTYPE
	7,  // 10: openconfig.Connections.Connection.State.index:type_name -> ywrapper.UintValue
	5,  // 11: openconfig.Connections.Connection.State.source_openconfigtransportlineconnectivityportconnectiontype:type_name -> openconfig.OpenconfigTransportLineConnectivityPORTCONNECTIONTYPE
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_openconfig_transport_line_connectivity_proto_init() }
func file_openconfig_transport_line_connectivity_proto_init() {
	if File_openconfig_transport_line_connectivity_proto != nil {
		return
	}
	file_openconfig_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_openconfig_transport_line_connectivity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_transport_line_connectivity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connections_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_transport_line_connectivity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connections_ConnectionKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_transport_line_connectivity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connections_Connection_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_transport_line_connectivity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connections_Connection_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_openconfig_transport_line_connectivity_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Connections_Connection_Config_DestOpenconfigtransportlineconnectivityportconnectiontype)(nil),
		(*Connections_Connection_Config_DestString)(nil),
		(*Connections_Connection_Config_SourceOpenconfigtransportlineconnectivityportconnectiontype)(nil),
		(*Connections_Connection_Config_SourceString)(nil),
	}
	file_openconfig_transport_line_connectivity_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*Connections_Connection_State_DestOpenconfigtransportlineconnectivityportconnectiontype)(nil),
		(*Connections_Connection_State_DestString)(nil),
		(*Connections_Connection_State_SourceOpenconfigtransportlineconnectivityportconnectiontype)(nil),
		(*Connections_Connection_State_SourceString)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_openconfig_transport_line_connectivity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_openconfig_transport_line_connectivity_proto_goTypes,
		DependencyIndexes: file_openconfig_transport_line_connectivity_proto_depIdxs,
		MessageInfos:      file_openconfig_transport_line_connectivity_proto_msgTypes,
	}.Build()
	File_openconfig_transport_line_connectivity_proto = out.File
	file_openconfig_transport_line_connectivity_proto_rawDesc = nil
	file_openconfig_transport_line_connectivity_proto_goTypes = nil
	file_openconfig_transport_line_connectivity_proto_depIdxs = nil
}
