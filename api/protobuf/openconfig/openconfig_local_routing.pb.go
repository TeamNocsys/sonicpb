// openconfig.openconfig_local_routing is generated by proto_generator as a protobuf
// representation of a YANG schema.
//
// Input schema modules:
//  - ../api/yang/public/doc/openconfig-example.yang
//  - ../api/yang/public/third_party/ietf/iana-if-type.yang
//  - ../api/yang/public/third_party/ietf/ietf-interfaces.yang
//  - ../api/yang/public/third_party/ietf/ietf-yang-types.yang
//  - ../api/yang/public/third_party/ietf/ietf-inet-types.yang
//  - ../api/yang/public/release/models/bfd/openconfig-bfd.yang
//  - ../api/yang/public/release/models/vlan/openconfig-vlan.yang
//  - ../api/yang/public/release/models/vlan/openconfig-vlan-types.yang
//  - ../api/yang/public/release/models/wifi/openconfig-access-points.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-mac.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-types.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-phy.yang
//  - ../api/yang/public/release/models/wifi/openconfig-ap-interfaces.yang
//  - ../api/yang/public/release/models/wifi/openconfig-ap-manager.yang
//  - ../api/yang/public/release/models/macsec/openconfig-macsec.yang
//  - ../api/yang/public/release/models/macsec/openconfig-macsec-types.yang
//  - ../api/yang/public/release/models/stp/openconfig-spanning-tree-types.yang
//  - ../api/yang/public/release/models/stp/openconfig-spanning-tree.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-errors.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-peer-group.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-types.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-global.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-neighbor.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common-structure.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-policy.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common-multiprotocol.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-types.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-port.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-fan.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-linecard.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-ext.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-cpu.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-psu.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-transceiver.yang
//  - ../api/yang/public/release/models/multicast/openconfig-pim-types.yang
//  - ../api/yang/public/release/models/multicast/openconfig-igmp-types.yang
//  - ../api/yang/public/release/models/multicast/openconfig-igmp.yang
//  - ../api/yang/public/release/models/multicast/openconfig-pim.yang
//  - ../api/yang/public/release/models/catalog/openconfig-module-catalog.yang
//  - ../api/yang/public/release/models/catalog/openconfig-catalog-types.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-interfaces.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-8021x.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-types.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-aggregate.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-poe.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-tunnel.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ip.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ethernet.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ethernet-ext.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ip-ext.yang
//  - ../api/yang/public/release/models/acl/openconfig-packet-match-types.yang
//  - ../api/yang/public/release/models/acl/openconfig-packet-match.yang
//  - ../api/yang/public/release/models/acl/openconfig-acl.yang
//  - ../api/yang/public/release/models/system/openconfig-license.yang
//  - ../api/yang/public/release/models/system/openconfig-system.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-radius.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa.yang
//  - ../api/yang/public/release/models/system/openconfig-system-management.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-types.yang
//  - ../api/yang/public/release/models/system/openconfig-procmon.yang
//  - ../api/yang/public/release/models/system/openconfig-messages.yang
//  - ../api/yang/public/release/models/system/openconfig-system-terminal.yang
//  - ../api/yang/public/release/models/system/openconfig-system-logging.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-tacacs.yang
//  - ../api/yang/public/release/models/system/openconfig-alarms.yang
//  - ../api/yang/public/release/models/system/openconfig-alarm-types.yang
//  - ../api/yang/public/release/models/policy/openconfig-policy-types.yang
//  - ../api/yang/public/release/models/policy/openconfig-routing-policy.yang
//  - ../api/yang/public/release/models/lacp/openconfig-lacp.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-wavelength-router.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-optical-amplifier.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-protection.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-channel-monitor.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-connectivity.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-optical-attenuator.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-common.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-types.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-terminal-device.yang
//  - ../api/yang/public/release/models/telemetry/openconfig-telemetry-types.yang
//  - ../api/yang/public/release/models/telemetry/openconfig-telemetry.yang
//  - ../api/yang/public/release/models/openflow/openconfig-openflow.yang
//  - ../api/yang/public/release/models/openflow/openconfig-openflow-types.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-tables.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-ext.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-table-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-shared-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-types.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-types.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-elements.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-interfaces.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-srte.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-forwarding-policies.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-interfaces.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-path-groups.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
//  - ../api/yang/public/release/models/relay-agent/openconfig-relay-agent.yang
//  - ../api/yang/public/release/models/lldp/openconfig-lldp.yang
//  - ../api/yang/public/release/models/lldp/openconfig-lldp-types.yang
//  - ../api/yang/public/release/models/openconfig-extensions.yang
//  - ../api/yang/public/release/models/types/openconfig-yang-types.yang
//  - ../api/yang/public/release/models/types/openconfig-inet-types.yang
//  - ../api/yang/public/release/models/types/openconfig-types.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-srte-policy.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-rsvp-sr-ext.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-segment-routing-types.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-segment-routing.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-types.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-igp.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-te.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-rsvp.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-static.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-sr.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-ldp.yang
//  - ../api/yang/public/release/models/probes/openconfig-probes-types.yang
//  - ../api/yang/public/release/models/probes/openconfig-probes.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-lsp.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-lsdb-types.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-policy.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-types.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-routing.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-area.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospf-policy.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-common.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-global.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-area-interface.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-lsdb.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospf-types.yang
//  - ../api/yang/public/release/models/local-routing/openconfig-local-routing.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-l3.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-l2.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-policy.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-types.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-mpls.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-common.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-types.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ipv6.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-pf.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-network-instance.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ipv4.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ethernet.yang

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: openconfig_local_routing.proto

package openconfig

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/openconfig/ygot/proto/yext"
	ywrapper "github.com/openconfig/ygot/proto/ywrapper"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LocalRoutes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config          *LocalRoutes_Config          `protobuf:"bytes,131207041,opt,name=config,proto3" json:"config,omitempty"`
	LocalAggregates *LocalRoutes_LocalAggregates `protobuf:"bytes,513598801,opt,name=local_aggregates,json=localAggregates,proto3" json:"local_aggregates,omitempty"`
	State           *LocalRoutes_State           `protobuf:"bytes,4572406,opt,name=state,proto3" json:"state,omitempty"`
	StaticRoutes    *LocalRoutes_StaticRoutes    `protobuf:"bytes,91862420,opt,name=static_routes,json=staticRoutes,proto3" json:"static_routes,omitempty"`
}

func (x *LocalRoutes) Reset() {
	*x = LocalRoutes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes) ProtoMessage() {}

func (x *LocalRoutes) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes.ProtoReflect.Descriptor instead.
func (*LocalRoutes) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0}
}

func (x *LocalRoutes) GetConfig() *LocalRoutes_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *LocalRoutes) GetLocalAggregates() *LocalRoutes_LocalAggregates {
	if x != nil {
		return x.LocalAggregates
	}
	return nil
}

func (x *LocalRoutes) GetState() *LocalRoutes_State {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *LocalRoutes) GetStaticRoutes() *LocalRoutes_StaticRoutes {
	if x != nil {
		return x.StaticRoutes
	}
	return nil
}

type LocalRoutes_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalRoutes_Config) Reset() {
	*x = LocalRoutes_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_Config) ProtoMessage() {}

func (x *LocalRoutes_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_Config.ProtoReflect.Descriptor instead.
func (*LocalRoutes_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 0}
}

type LocalRoutes_LocalAggregates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aggregate []*LocalRoutes_LocalAggregates_AggregateKey `protobuf:"bytes,517591781,rep,name=aggregate,proto3" json:"aggregate,omitempty"`
}

func (x *LocalRoutes_LocalAggregates) Reset() {
	*x = LocalRoutes_LocalAggregates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_LocalAggregates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_LocalAggregates) ProtoMessage() {}

func (x *LocalRoutes_LocalAggregates) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_LocalAggregates.ProtoReflect.Descriptor instead.
func (*LocalRoutes_LocalAggregates) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 1}
}

func (x *LocalRoutes_LocalAggregates) GetAggregate() []*LocalRoutes_LocalAggregates_AggregateKey {
	if x != nil {
		return x.Aggregate
	}
	return nil
}

type LocalRoutes_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocalRoutes_State) Reset() {
	*x = LocalRoutes_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_State) ProtoMessage() {}

func (x *LocalRoutes_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_State.ProtoReflect.Descriptor instead.
func (*LocalRoutes_State) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 2}
}

type LocalRoutes_StaticRoutes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Static []*LocalRoutes_StaticRoutes_StaticKey `protobuf:"bytes,332520613,rep,name=static,proto3" json:"static,omitempty"`
}

func (x *LocalRoutes_StaticRoutes) Reset() {
	*x = LocalRoutes_StaticRoutes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3}
}

func (x *LocalRoutes_StaticRoutes) GetStatic() []*LocalRoutes_StaticRoutes_StaticKey {
	if x != nil {
		return x.Static
	}
	return nil
}

type LocalRoutes_LocalAggregates_Aggregate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *LocalRoutes_LocalAggregates_Aggregate_Config `protobuf:"bytes,237192362,opt,name=config,proto3" json:"config,omitempty"`
	State  *LocalRoutes_LocalAggregates_Aggregate_State  `protobuf:"bytes,455567815,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *LocalRoutes_LocalAggregates_Aggregate) Reset() {
	*x = LocalRoutes_LocalAggregates_Aggregate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_LocalAggregates_Aggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_LocalAggregates_Aggregate) ProtoMessage() {}

func (x *LocalRoutes_LocalAggregates_Aggregate) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_LocalAggregates_Aggregate.ProtoReflect.Descriptor instead.
func (*LocalRoutes_LocalAggregates_Aggregate) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 1, 0}
}

func (x *LocalRoutes_LocalAggregates_Aggregate) GetConfig() *LocalRoutes_LocalAggregates_Aggregate_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *LocalRoutes_LocalAggregates_Aggregate) GetState() *LocalRoutes_LocalAggregates_Aggregate_State {
	if x != nil {
		return x.State
	}
	return nil
}

type LocalRoutes_LocalAggregates_AggregateKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix    string                                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Aggregate *LocalRoutes_LocalAggregates_Aggregate `protobuf:"bytes,2,opt,name=aggregate,proto3" json:"aggregate,omitempty"`
}

func (x *LocalRoutes_LocalAggregates_AggregateKey) Reset() {
	*x = LocalRoutes_LocalAggregates_AggregateKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_LocalAggregates_AggregateKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_LocalAggregates_AggregateKey) ProtoMessage() {}

func (x *LocalRoutes_LocalAggregates_AggregateKey) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_LocalAggregates_AggregateKey.ProtoReflect.Descriptor instead.
func (*LocalRoutes_LocalAggregates_AggregateKey) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 1, 1}
}

func (x *LocalRoutes_LocalAggregates_AggregateKey) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *LocalRoutes_LocalAggregates_AggregateKey) GetAggregate() *LocalRoutes_LocalAggregates_Aggregate {
	if x != nil {
		return x.Aggregate
	}
	return nil
}

type LocalRoutes_LocalAggregates_Aggregate_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *ywrapper.StringValue `protobuf:"bytes,35403181,opt,name=description,proto3" json:"description,omitempty"`
	Discard     *ywrapper.BoolValue   `protobuf:"bytes,40246549,opt,name=discard,proto3" json:"discard,omitempty"`
	Prefix      *ywrapper.StringValue `protobuf:"bytes,222166733,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Types that are assignable to SetTag:
	//	*LocalRoutes_LocalAggregates_Aggregate_Config_SetTagString
	//	*LocalRoutes_LocalAggregates_Aggregate_Config_SetTagUint64
	SetTag isLocalRoutes_LocalAggregates_Aggregate_Config_SetTag `protobuf_oneof:"set_tag"`
}

func (x *LocalRoutes_LocalAggregates_Aggregate_Config) Reset() {
	*x = LocalRoutes_LocalAggregates_Aggregate_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_LocalAggregates_Aggregate_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_LocalAggregates_Aggregate_Config) ProtoMessage() {}

func (x *LocalRoutes_LocalAggregates_Aggregate_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_LocalAggregates_Aggregate_Config.ProtoReflect.Descriptor instead.
func (*LocalRoutes_LocalAggregates_Aggregate_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 1, 0, 0}
}

func (x *LocalRoutes_LocalAggregates_Aggregate_Config) GetDescription() *ywrapper.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *LocalRoutes_LocalAggregates_Aggregate_Config) GetDiscard() *ywrapper.BoolValue {
	if x != nil {
		return x.Discard
	}
	return nil
}

func (x *LocalRoutes_LocalAggregates_Aggregate_Config) GetPrefix() *ywrapper.StringValue {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (m *LocalRoutes_LocalAggregates_Aggregate_Config) GetSetTag() isLocalRoutes_LocalAggregates_Aggregate_Config_SetTag {
	if m != nil {
		return m.SetTag
	}
	return nil
}

func (x *LocalRoutes_LocalAggregates_Aggregate_Config) GetSetTagString() string {
	if x, ok := x.GetSetTag().(*LocalRoutes_LocalAggregates_Aggregate_Config_SetTagString); ok {
		return x.SetTagString
	}
	return ""
}

func (x *LocalRoutes_LocalAggregates_Aggregate_Config) GetSetTagUint64() uint64 {
	if x, ok := x.GetSetTag().(*LocalRoutes_LocalAggregates_Aggregate_Config_SetTagUint64); ok {
		return x.SetTagUint64
	}
	return 0
}

type isLocalRoutes_LocalAggregates_Aggregate_Config_SetTag interface {
	isLocalRoutes_LocalAggregates_Aggregate_Config_SetTag()
}

type LocalRoutes_LocalAggregates_Aggregate_Config_SetTagString struct {
	SetTagString string `protobuf:"bytes,217855372,opt,name=set_tag_string,json=setTagString,proto3,oneof"`
}

type LocalRoutes_LocalAggregates_Aggregate_Config_SetTagUint64 struct {
	SetTagUint64 uint64 `protobuf:"varint,330171541,opt,name=set_tag_uint64,json=setTagUint64,proto3,oneof"`
}

func (*LocalRoutes_LocalAggregates_Aggregate_Config_SetTagString) isLocalRoutes_LocalAggregates_Aggregate_Config_SetTag() {
}

func (*LocalRoutes_LocalAggregates_Aggregate_Config_SetTagUint64) isLocalRoutes_LocalAggregates_Aggregate_Config_SetTag() {
}

type LocalRoutes_LocalAggregates_Aggregate_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *ywrapper.StringValue `protobuf:"bytes,419586976,opt,name=description,proto3" json:"description,omitempty"`
	Discard     *ywrapper.BoolValue   `protobuf:"bytes,410430696,opt,name=discard,proto3" json:"discard,omitempty"`
	Prefix      *ywrapper.StringValue `protobuf:"bytes,535531910,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Types that are assignable to SetTag:
	//	*LocalRoutes_LocalAggregates_Aggregate_State_SetTagString
	//	*LocalRoutes_LocalAggregates_Aggregate_State_SetTagUint64
	SetTag isLocalRoutes_LocalAggregates_Aggregate_State_SetTag `protobuf_oneof:"set_tag"`
}

func (x *LocalRoutes_LocalAggregates_Aggregate_State) Reset() {
	*x = LocalRoutes_LocalAggregates_Aggregate_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_LocalAggregates_Aggregate_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_LocalAggregates_Aggregate_State) ProtoMessage() {}

func (x *LocalRoutes_LocalAggregates_Aggregate_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_LocalAggregates_Aggregate_State.ProtoReflect.Descriptor instead.
func (*LocalRoutes_LocalAggregates_Aggregate_State) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 1, 0, 1}
}

func (x *LocalRoutes_LocalAggregates_Aggregate_State) GetDescription() *ywrapper.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *LocalRoutes_LocalAggregates_Aggregate_State) GetDiscard() *ywrapper.BoolValue {
	if x != nil {
		return x.Discard
	}
	return nil
}

func (x *LocalRoutes_LocalAggregates_Aggregate_State) GetPrefix() *ywrapper.StringValue {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (m *LocalRoutes_LocalAggregates_Aggregate_State) GetSetTag() isLocalRoutes_LocalAggregates_Aggregate_State_SetTag {
	if m != nil {
		return m.SetTag
	}
	return nil
}

func (x *LocalRoutes_LocalAggregates_Aggregate_State) GetSetTagString() string {
	if x, ok := x.GetSetTag().(*LocalRoutes_LocalAggregates_Aggregate_State_SetTagString); ok {
		return x.SetTagString
	}
	return ""
}

func (x *LocalRoutes_LocalAggregates_Aggregate_State) GetSetTagUint64() uint64 {
	if x, ok := x.GetSetTag().(*LocalRoutes_LocalAggregates_Aggregate_State_SetTagUint64); ok {
		return x.SetTagUint64
	}
	return 0
}

type isLocalRoutes_LocalAggregates_Aggregate_State_SetTag interface {
	isLocalRoutes_LocalAggregates_Aggregate_State_SetTag()
}

type LocalRoutes_LocalAggregates_Aggregate_State_SetTagString struct {
	SetTagString string `protobuf:"bytes,112300619,opt,name=set_tag_string,json=setTagString,proto3,oneof"`
}

type LocalRoutes_LocalAggregates_Aggregate_State_SetTagUint64 struct {
	SetTagUint64 uint64 `protobuf:"varint,310468718,opt,name=set_tag_uint64,json=setTagUint64,proto3,oneof"`
}

func (*LocalRoutes_LocalAggregates_Aggregate_State_SetTagString) isLocalRoutes_LocalAggregates_Aggregate_State_SetTag() {
}

func (*LocalRoutes_LocalAggregates_Aggregate_State_SetTagUint64) isLocalRoutes_LocalAggregates_Aggregate_State_SetTag() {
}

type LocalRoutes_StaticRoutes_Static struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config   *LocalRoutes_StaticRoutes_Static_Config   `protobuf:"bytes,427194602,opt,name=config,proto3" json:"config,omitempty"`
	NextHops *LocalRoutes_StaticRoutes_Static_NextHops `protobuf:"bytes,360532640,opt,name=next_hops,json=nextHops,proto3" json:"next_hops,omitempty"`
	State    *LocalRoutes_StaticRoutes_Static_State    `protobuf:"bytes,270179591,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static) Reset() {
	*x = LocalRoutes_StaticRoutes_Static{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0}
}

func (x *LocalRoutes_StaticRoutes_Static) GetConfig() *LocalRoutes_StaticRoutes_Static_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static) GetNextHops() *LocalRoutes_StaticRoutes_Static_NextHops {
	if x != nil {
		return x.NextHops
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static) GetState() *LocalRoutes_StaticRoutes_Static_State {
	if x != nil {
		return x.State
	}
	return nil
}

type LocalRoutes_StaticRoutes_StaticKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix string                           `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Static *LocalRoutes_StaticRoutes_Static `protobuf:"bytes,2,opt,name=static,proto3" json:"static,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_StaticKey) Reset() {
	*x = LocalRoutes_StaticRoutes_StaticKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_StaticKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_StaticKey) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_StaticKey) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_StaticKey.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_StaticKey) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 1}
}

func (x *LocalRoutes_StaticRoutes_StaticKey) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *LocalRoutes_StaticRoutes_StaticKey) GetStatic() *LocalRoutes_StaticRoutes_Static {
	if x != nil {
		return x.Static
	}
	return nil
}

type LocalRoutes_StaticRoutes_Static_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *ywrapper.StringValue `protobuf:"bytes,2248045,opt,name=description,proto3" json:"description,omitempty"`
	Prefix      *ywrapper.StringValue `protobuf:"bytes,271780237,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Types that are assignable to SetTag:
	//	*LocalRoutes_StaticRoutes_Static_Config_SetTagString
	//	*LocalRoutes_StaticRoutes_Static_Config_SetTagUint64
	SetTag isLocalRoutes_StaticRoutes_Static_Config_SetTag `protobuf_oneof:"set_tag"`
}

func (x *LocalRoutes_StaticRoutes_Static_Config) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_Config) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_Config.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 0}
}

func (x *LocalRoutes_StaticRoutes_Static_Config) GetDescription() *ywrapper.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_Config) GetPrefix() *ywrapper.StringValue {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (m *LocalRoutes_StaticRoutes_Static_Config) GetSetTag() isLocalRoutes_StaticRoutes_Static_Config_SetTag {
	if m != nil {
		return m.SetTag
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_Config) GetSetTagString() string {
	if x, ok := x.GetSetTag().(*LocalRoutes_StaticRoutes_Static_Config_SetTagString); ok {
		return x.SetTagString
	}
	return ""
}

func (x *LocalRoutes_StaticRoutes_Static_Config) GetSetTagUint64() uint64 {
	if x, ok := x.GetSetTag().(*LocalRoutes_StaticRoutes_Static_Config_SetTagUint64); ok {
		return x.SetTagUint64
	}
	return 0
}

type isLocalRoutes_StaticRoutes_Static_Config_SetTag interface {
	isLocalRoutes_StaticRoutes_Static_Config_SetTag()
}

type LocalRoutes_StaticRoutes_Static_Config_SetTagString struct {
	SetTagString string `protobuf:"bytes,240426188,opt,name=set_tag_string,json=setTagString,proto3,oneof"`
}

type LocalRoutes_StaticRoutes_Static_Config_SetTagUint64 struct {
	SetTagUint64 uint64 `protobuf:"varint,240380373,opt,name=set_tag_uint64,json=setTagUint64,proto3,oneof"`
}

func (*LocalRoutes_StaticRoutes_Static_Config_SetTagString) isLocalRoutes_StaticRoutes_Static_Config_SetTag() {
}

func (*LocalRoutes_StaticRoutes_Static_Config_SetTagUint64) isLocalRoutes_StaticRoutes_Static_Config_SetTag() {
}

type LocalRoutes_StaticRoutes_Static_NextHops struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextHop []*LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey `protobuf:"bytes,96175510,rep,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_NextHops{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_NextHops) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_NextHops) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_NextHops.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_NextHops) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 1}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops) GetNextHop() []*LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey {
	if x != nil {
		return x.NextHop
	}
	return nil
}

type LocalRoutes_StaticRoutes_Static_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *ywrapper.StringValue `protobuf:"bytes,98004576,opt,name=description,proto3" json:"description,omitempty"`
	Prefix      *ywrapper.StringValue `protobuf:"bytes,325274694,opt,name=prefix,proto3" json:"prefix,omitempty"`
	// Types that are assignable to SetTag:
	//	*LocalRoutes_StaticRoutes_Static_State_SetTagString
	//	*LocalRoutes_StaticRoutes_Static_State_SetTagUint64
	SetTag isLocalRoutes_StaticRoutes_Static_State_SetTag `protobuf_oneof:"set_tag"`
}

func (x *LocalRoutes_StaticRoutes_Static_State) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_State) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_State.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_State) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 2}
}

func (x *LocalRoutes_StaticRoutes_Static_State) GetDescription() *ywrapper.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_State) GetPrefix() *ywrapper.StringValue {
	if x != nil {
		return x.Prefix
	}
	return nil
}

func (m *LocalRoutes_StaticRoutes_Static_State) GetSetTag() isLocalRoutes_StaticRoutes_Static_State_SetTag {
	if m != nil {
		return m.SetTag
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_State) GetSetTagString() string {
	if x, ok := x.GetSetTag().(*LocalRoutes_StaticRoutes_Static_State_SetTagString); ok {
		return x.SetTagString
	}
	return ""
}

func (x *LocalRoutes_StaticRoutes_Static_State) GetSetTagUint64() uint64 {
	if x, ok := x.GetSetTag().(*LocalRoutes_StaticRoutes_Static_State_SetTagUint64); ok {
		return x.SetTagUint64
	}
	return 0
}

type isLocalRoutes_StaticRoutes_Static_State_SetTag interface {
	isLocalRoutes_StaticRoutes_Static_State_SetTag()
}

type LocalRoutes_StaticRoutes_Static_State_SetTagString struct {
	SetTagString string `protobuf:"bytes,440620427,opt,name=set_tag_string,json=setTagString,proto3,oneof"`
}

type LocalRoutes_StaticRoutes_Static_State_SetTagUint64 struct {
	SetTagUint64 uint64 `protobuf:"varint,31029422,opt,name=set_tag_uint64,json=setTagUint64,proto3,oneof"`
}

func (*LocalRoutes_StaticRoutes_Static_State_SetTagString) isLocalRoutes_StaticRoutes_Static_State_SetTag() {
}

func (*LocalRoutes_StaticRoutes_Static_State_SetTagUint64) isLocalRoutes_StaticRoutes_Static_State_SetTag() {
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config       *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config       `protobuf:"bytes,90176503,opt,name=config,proto3" json:"config,omitempty"`
	InterfaceRef *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef `protobuf:"bytes,182073938,opt,name=interface_ref,json=interfaceRef,proto3" json:"interface_ref,omitempty"`
	State        *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State        `protobuf:"bytes,80265000,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_NextHops_NextHop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_NextHops_NextHop.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 1, 0}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop) GetConfig() *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop) GetInterfaceRef() *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef {
	if x != nil {
		return x.InterfaceRef
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop) GetState() *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State {
	if x != nil {
		return x.State
	}
	return nil
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   string                                            `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
	NextHop *LocalRoutes_StaticRoutes_Static_NextHops_NextHop `protobuf:"bytes,2,opt,name=next_hop,json=nextHop,proto3" json:"next_hop,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 1, 1}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey) GetIndex() string {
	if x != nil {
		return x.Index
	}
	return ""
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey) GetNextHop() *LocalRoutes_StaticRoutes_Static_NextHops_NextHop {
	if x != nil {
		return x.NextHop
	}
	return nil
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  *ywrapper.StringValue `protobuf:"bytes,54544518,opt,name=index,proto3" json:"index,omitempty"`
	Metric *ywrapper.UintValue   `protobuf:"bytes,120656046,opt,name=metric,proto3" json:"metric,omitempty"`
	// Types that are assignable to NextHop:
	//	*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopOpenconfiglocalroutinglocaldefinednexthop
	//	*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopString
	NextHop isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop `protobuf_oneof:"next_hop"`
	Recurse *ywrapper.BoolValue                                               `protobuf:"bytes,140204665,opt,name=recurse,proto3" json:"recurse,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 1, 0, 0}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) GetIndex() *ywrapper.StringValue {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) GetMetric() *ywrapper.UintValue {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (m *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) GetNextHop() isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop {
	if m != nil {
		return m.NextHop
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) GetNextHopOpenconfiglocalroutinglocaldefinednexthop() OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP {
	if x, ok := x.GetNextHop().(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopOpenconfiglocalroutinglocaldefinednexthop); ok {
		return x.NextHopOpenconfiglocalroutinglocaldefinednexthop
	}
	return OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP_OPENCONFIGLOCALROUTINGLOCALDEFINEDNEXTHOP_UNSET
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) GetNextHopString() string {
	if x, ok := x.GetNextHop().(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopString); ok {
		return x.NextHopString
	}
	return ""
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config) GetRecurse() *ywrapper.BoolValue {
	if x != nil {
		return x.Recurse
	}
	return nil
}

type isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop interface {
	isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop()
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopOpenconfiglocalroutinglocaldefinednexthop struct {
	NextHopOpenconfiglocalroutinglocaldefinednexthop OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP `protobuf:"varint,484623271,opt,name=next_hop_openconfiglocalroutinglocaldefinednexthop,json=nextHopOpenconfiglocalroutinglocaldefinednexthop,proto3,enum=openconfig.OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP,oneof"`
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopString struct {
	NextHopString string `protobuf:"bytes,380064993,opt,name=next_hop_string,json=nextHopString,proto3,oneof"`
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopOpenconfiglocalroutinglocaldefinednexthop) isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop() {
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopString) isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHop() {
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config `protobuf:"bytes,427905299,opt,name=config,proto3" json:"config,omitempty"`
	State  *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State  `protobuf:"bytes,250366708,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 1, 0, 1}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef) GetConfig() *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef) GetState() *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State {
	if x != nil {
		return x.State
	}
	return nil
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index  *ywrapper.StringValue `protobuf:"bytes,181833497,opt,name=index,proto3" json:"index,omitempty"`
	Metric *ywrapper.UintValue   `protobuf:"bytes,339172011,opt,name=metric,proto3" json:"metric,omitempty"`
	// Types that are assignable to NextHop:
	//	*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopOpenconfiglocalroutinglocaldefinednexthop
	//	*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopString
	NextHop isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop `protobuf_oneof:"next_hop"`
	Recurse *ywrapper.BoolValue                                              `protobuf:"bytes,210680806,opt,name=recurse,proto3" json:"recurse,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 1, 0, 2}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) GetIndex() *ywrapper.StringValue {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) GetMetric() *ywrapper.UintValue {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (m *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) GetNextHop() isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop {
	if m != nil {
		return m.NextHop
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) GetNextHopOpenconfiglocalroutinglocaldefinednexthop() OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP {
	if x, ok := x.GetNextHop().(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopOpenconfiglocalroutinglocaldefinednexthop); ok {
		return x.NextHopOpenconfiglocalroutinglocaldefinednexthop
	}
	return OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP_OPENCONFIGLOCALROUTINGLOCALDEFINEDNEXTHOP_UNSET
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) GetNextHopString() string {
	if x, ok := x.GetNextHop().(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopString); ok {
		return x.NextHopString
	}
	return ""
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State) GetRecurse() *ywrapper.BoolValue {
	if x != nil {
		return x.Recurse
	}
	return nil
}

type isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop interface {
	isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop()
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopOpenconfiglocalroutinglocaldefinednexthop struct {
	NextHopOpenconfiglocalroutinglocaldefinednexthop OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP `protobuf:"varint,309407714,opt,name=next_hop_openconfiglocalroutinglocaldefinednexthop,json=nextHopOpenconfiglocalroutinglocaldefinednexthop,proto3,enum=openconfig.OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP,oneof"`
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopString struct {
	NextHopString string `protobuf:"bytes,190785246,opt,name=next_hop_string,json=nextHopString,proto3,oneof"`
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopOpenconfiglocalroutinglocaldefinednexthop) isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop() {
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopString) isLocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHop() {
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface    *ywrapper.StringValue `protobuf:"bytes,248172787,opt,name=interface,proto3" json:"interface,omitempty"`
	Subinterface *ywrapper.UintValue   `protobuf:"bytes,425201249,opt,name=subinterface,proto3" json:"subinterface,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 1, 0, 1, 0}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config) GetInterface() *ywrapper.StringValue {
	if x != nil {
		return x.Interface
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config) GetSubinterface() *ywrapper.UintValue {
	if x != nil {
		return x.Subinterface
	}
	return nil
}

type LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interface    *ywrapper.StringValue `protobuf:"bytes,152325452,opt,name=interface,proto3" json:"interface,omitempty"`
	Subinterface *ywrapper.UintValue   `protobuf:"bytes,340116604,opt,name=subinterface,proto3" json:"subinterface,omitempty"`
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State) Reset() {
	*x = LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_local_routing_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State) ProtoMessage() {}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_local_routing_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State.ProtoReflect.Descriptor instead.
func (*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State) Descriptor() ([]byte, []int) {
	return file_openconfig_local_routing_proto_rawDescGZIP(), []int{0, 3, 0, 1, 0, 1, 1}
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State) GetInterface() *ywrapper.StringValue {
	if x != nil {
		return x.Interface
	}
	return nil
}

func (x *LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State) GetSubinterface() *ywrapper.UintValue {
	if x != nil {
		return x.Subinterface
	}
	return nil
}

var File_openconfig_local_routing_proto protoreflect.FileDescriptor

var file_openconfig_local_routing_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0e, 0x79, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x79, 0x65,
	0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xe8, 0x31, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x52, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x81, 0x9f, 0xc8, 0x3e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x17, 0x82, 0x41, 0x14, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x79, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0xd1, 0xca, 0xf3, 0xf4, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x42, 0x21, 0x82, 0x41, 0x1e,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x4e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0xf6, 0x89, 0x97, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x16, 0x82, 0x41, 0x13, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x6c, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x94, 0xeb, 0xe6, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x42,
	0x1e, 0x82, 0x41, 0x1b, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x52,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x1a, 0x08, 0x0a,
	0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xeb, 0x0b, 0x0a, 0x0f, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12, 0x83, 0x01, 0x0a, 0x09,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x18, 0xe5, 0xa5, 0xe7, 0xf6, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x42, 0x2b, 0x82, 0x41, 0x28, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x1a, 0xa3, 0x09, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12,
	0x87, 0x01, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xaa, 0x89, 0x8d, 0x71, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x32, 0x82,
	0x41, 0x2f, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73,
	0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x84, 0x01, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0xc7, 0xd3, 0x9d, 0xd9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x31, 0x82, 0x41, 0x2e, 0x2f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x1a, 0xc1, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x7a, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xad, 0xeb, 0xf0, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x3e, 0x82, 0x41, 0x3b, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x61, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x95, 0xba, 0x98, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x3a, 0x82, 0x41, 0x37, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x73, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52, 0x07, 0x64, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x12, 0x6b, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0xcd, 0xfd, 0xf7, 0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x39, 0x82, 0x41, 0x36, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x73, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x8c, 0xeb, 0xf0, 0x67, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a,
	0x0e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18,
	0x95, 0x89, 0xb8, 0x9d, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x74,
	0x54, 0x61, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x09, 0x0a, 0x07, 0x73, 0x65, 0x74,
	0x5f, 0x74, 0x61, 0x67, 0x1a, 0xc0, 0x03, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x7a,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xa0, 0xc7,
	0x89, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x3d,
	0x82, 0x41, 0x3a, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x73, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6c, 0x0a, 0x07, 0x64, 0x69,
	0x73, 0x63, 0x61, 0x72, 0x64, 0x18, 0xe8, 0xd9, 0xda, 0xc3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x39, 0x82, 0x41, 0x36, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x52,
	0x07, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x12, 0x6b, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x86, 0xa3, 0xae, 0xff, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x38, 0x82, 0x41, 0x35, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67,
	0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0xcb, 0xa4, 0xc6, 0x35, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x75, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x18, 0xee, 0xc0, 0x85, 0x94, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x09, 0x0a, 0x07,
	0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x1a, 0xab, 0x01, 0x0a, 0x0c, 0x41, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x4a, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0x82, 0x41, 0x2f, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x2d, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x12, 0x4f, 0x0a, 0x09, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x61, 0x67, 0x67, 0x72,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x1a, 0x07, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xca,
	0x22, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x71, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x18, 0xa5, 0xb9, 0xc7, 0x9e, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x4b, 0x65, 0x79, 0x42, 0x25, 0x82, 0x41, 0x22, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x1a, 0xad, 0x20, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x12, 0x7c, 0x0a,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xea, 0xf1, 0xd9, 0xcb, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x32, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x2c, 0x82, 0x41, 0x29, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x86, 0x01, 0x0a, 0x09,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x73, 0x18, 0xa0, 0x95, 0xf5, 0xab, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x73, 0x42, 0x2f, 0x82, 0x41, 0x2c, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x48, 0x6f, 0x70, 0x73, 0x12, 0x78, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x87, 0xba,
	0xea, 0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x2b, 0x82, 0x41, 0x28, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xc7,
	0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x74, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xed, 0x9a, 0x89, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x38, 0x82, 0x41, 0x35, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x66, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x8d, 0x93, 0xcc, 0x81, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x33, 0x82, 0x41, 0x30, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52,
	0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x74,
	0x61, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0xcc, 0xb9, 0xd2, 0x72, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x75, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0xd5, 0xd3, 0xcf, 0x72, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x09, 0x0a,
	0x07, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x1a, 0x8f, 0x18, 0x0a, 0x08, 0x4e, 0x65, 0x78,
	0x74, 0x48, 0x6f, 0x70, 0x73, 0x12, 0x97, 0x01, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68,
	0x6f, 0x70, 0x18, 0x96, 0x8b, 0xee, 0x2d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x6f, 0x70,
	0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70,
	0x73, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x4b, 0x65, 0x79, 0x42, 0x38, 0x82, 0x41,
	0x35, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65,
	0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x1a,
	0xaa, 0x15, 0x0a, 0x07, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x12, 0x9f, 0x01, 0x0a, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0xf7, 0xf7, 0xff, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x43, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2e, 0x4e, 0x65, 0x78,
	0x74, 0x48, 0x6f, 0x70, 0x73, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x3f, 0x82, 0x41, 0x3c, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74,
	0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0xb9, 0x01,
	0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x18,
	0xd2, 0xf4, 0xe8, 0x56, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x73, 0x2e, 0x4e,
	0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x42, 0x46, 0x82, 0x41, 0x43, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d,
	0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2d, 0x72, 0x65, 0x66, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x9b, 0x01, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0xa8, 0xfe, 0xa2, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f,
	0x70, 0x73, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x42, 0x3e, 0x82, 0x41, 0x3b, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70,
	0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xd8, 0x04, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x75, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x86, 0x91, 0x81, 0x1a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x45, 0x82, 0x41, 0x42,
	0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78,
	0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x76, 0x0a, 0x06, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x18, 0xae, 0xa1, 0xc4, 0x39, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x42, 0x46, 0x82, 0x41, 0x43, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f,
	0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x12, 0xa9, 0x01, 0x0a, 0x32, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x67, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x18, 0xa7, 0x87, 0x8b, 0xe7, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x35, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x44, 0x45, 0x46, 0x49, 0x4e,
	0x45, 0x44, 0x4e, 0x45, 0x58, 0x54, 0x48, 0x4f, 0x50, 0x48, 0x00, 0x52, 0x30, 0x6e, 0x65, 0x78,
	0x74, 0x48, 0x6f, 0x70, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64,
	0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x12, 0x2c, 0x0a,
	0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0xe1, 0xa9, 0x9d, 0xb5, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x65,
	0x78, 0x74, 0x48, 0x6f, 0x70, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x79, 0x0a, 0x07, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x18, 0xf9, 0xb4, 0xed, 0x42, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x47, 0x82, 0x41, 0x44, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74,
	0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68,
	0x6f, 0x70, 0x1a, 0xf0, 0x07, 0x0a, 0x0c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x12, 0xbb, 0x01, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x93,
	0xa2, 0x85, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x50, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x73, 0x2e, 0x4e,
	0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x66, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x4d, 0x82, 0x41, 0x4a, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74,
	0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2d, 0x72,
	0x65, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0xb6, 0x01, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0xf4, 0x95, 0xb1, 0x77,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x4f, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x73, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48,
	0x6f, 0x70, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x66, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x4c, 0x82, 0x41, 0x49, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78,
	0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2d, 0x72, 0x65, 0x66, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xb4, 0x02, 0x0a, 0x06, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x8f, 0x01, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x18, 0xf3, 0xa1, 0xab, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x57, 0x82, 0x41, 0x54, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d,
	0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2d, 0x72, 0x65, 0x66, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x97, 0x01, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0xe1, 0x9c, 0xe0, 0xca, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x69,
	0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x5a, 0x82, 0x41, 0x57, 0x2f, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e,
	0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f,
	0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2d, 0x72, 0x65, 0x66, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x73, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x1a, 0xb1, 0x02, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x8e, 0x01, 0x0a, 0x09,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0xcc, 0x9a, 0xd1, 0x48, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x56, 0x82, 0x41, 0x53, 0x2f, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d,
	0x68, 0x6f, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2d, 0x72, 0x65,
	0x66, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x96, 0x01, 0x0a,
	0x0c, 0x73, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0xfc, 0x88,
	0x97, 0xa2, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x59, 0x82, 0x41,
	0x56, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65,
	0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2d, 0x72, 0x65, 0x66, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x75, 0x62, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x1a, 0xd4, 0x04, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x74, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x99, 0x9e, 0xda, 0x56, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x44, 0x82, 0x41, 0x41, 0x2f, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f,
	0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68,
	0x6f, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x76, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18,
	0xab, 0xb5, 0xdd, 0xa1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x45,
	0x82, 0x41, 0x42, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f,
	0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0xa9, 0x01,
	0x0a, 0x32, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x67, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x6e, 0x65, 0x78,
	0x74, 0x68, 0x6f, 0x70, 0x18, 0xe2, 0xdf, 0xc4, 0x93, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x35,
	0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x67, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x4e, 0x45,
	0x58, 0x54, 0x48, 0x4f, 0x50, 0x48, 0x00, 0x52, 0x30, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70,
	0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x6e, 0x65, 0x78, 0x74, 0x68, 0x6f, 0x70, 0x12, 0x2b, 0x0a, 0x0f, 0x6e, 0x65, 0x78,
	0x74, 0x5f, 0x68, 0x6f, 0x70, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0xde, 0xcd, 0xfc,
	0x5a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x78, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73,
	0x65, 0x18, 0xe6, 0xf7, 0xba, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42,
	0x46, 0x82, 0x41, 0x43, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73,
	0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f,
	0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x65,
	0x42, 0x0a, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x1a, 0xbb, 0x01, 0x0a,
	0x0a, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x54, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0x82, 0x41, 0x3b, 0x2f,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x63, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x2d, 0x68, 0x6f, 0x70, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74,
	0x2d, 0x68, 0x6f, 0x70, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x57, 0x0a, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x68, 0x6f, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x73, 0x2e, 0x4e, 0x65, 0x78, 0x74, 0x48, 0x6f,
	0x70, 0x52, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x48, 0x6f, 0x70, 0x1a, 0xc5, 0x02, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x73, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0xe0, 0xdc, 0xdd, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x37, 0x82, 0x41, 0x34, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x65, 0x0a, 0x06, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0xc6, 0x98, 0x8d, 0x9b, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x32, 0x82, 0x41, 0x2f, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x2a, 0x0a, 0x0e, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x8b, 0xab, 0x8d, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x65, 0x74, 0x54, 0x61, 0x67, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x0e,
	0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0xae,
	0xf1, 0xe5, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x54, 0x61,
	0x67, 0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x09, 0x0a, 0x07, 0x73, 0x65, 0x74, 0x5f, 0x74,
	0x61, 0x67, 0x1a, 0x96, 0x01, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x44, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x2c, 0x82, 0x41, 0x29, 0x2f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x2d, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2d, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x2f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x52, 0x06,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x69, 0x63, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x69, 0x63, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x69, 0x63, 0x42, 0x17, 0x0a, 0x15, 0x63,
	0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x63, 0x73, 0x79, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_openconfig_local_routing_proto_rawDescOnce sync.Once
	file_openconfig_local_routing_proto_rawDescData = file_openconfig_local_routing_proto_rawDesc
)

func file_openconfig_local_routing_proto_rawDescGZIP() []byte {
	file_openconfig_local_routing_proto_rawDescOnce.Do(func() {
		file_openconfig_local_routing_proto_rawDescData = protoimpl.X.CompressGZIP(file_openconfig_local_routing_proto_rawDescData)
	})
	return file_openconfig_local_routing_proto_rawDescData
}

var file_openconfig_local_routing_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_openconfig_local_routing_proto_goTypes = []interface{}{
	(*LocalRoutes)(nil),                                                          // 0: openconfig.LocalRoutes
	(*LocalRoutes_Config)(nil),                                                   // 1: openconfig.LocalRoutes.Config
	(*LocalRoutes_LocalAggregates)(nil),                                          // 2: openconfig.LocalRoutes.LocalAggregates
	(*LocalRoutes_State)(nil),                                                    // 3: openconfig.LocalRoutes.State
	(*LocalRoutes_StaticRoutes)(nil),                                             // 4: openconfig.LocalRoutes.StaticRoutes
	(*LocalRoutes_LocalAggregates_Aggregate)(nil),                                // 5: openconfig.LocalRoutes.LocalAggregates.Aggregate
	(*LocalRoutes_LocalAggregates_AggregateKey)(nil),                             // 6: openconfig.LocalRoutes.LocalAggregates.AggregateKey
	(*LocalRoutes_LocalAggregates_Aggregate_Config)(nil),                         // 7: openconfig.LocalRoutes.LocalAggregates.Aggregate.Config
	(*LocalRoutes_LocalAggregates_Aggregate_State)(nil),                          // 8: openconfig.LocalRoutes.LocalAggregates.Aggregate.State
	(*LocalRoutes_StaticRoutes_Static)(nil),                                      // 9: openconfig.LocalRoutes.StaticRoutes.Static
	(*LocalRoutes_StaticRoutes_StaticKey)(nil),                                   // 10: openconfig.LocalRoutes.StaticRoutes.StaticKey
	(*LocalRoutes_StaticRoutes_Static_Config)(nil),                               // 11: openconfig.LocalRoutes.StaticRoutes.Static.Config
	(*LocalRoutes_StaticRoutes_Static_NextHops)(nil),                             // 12: openconfig.LocalRoutes.StaticRoutes.Static.NextHops
	(*LocalRoutes_StaticRoutes_Static_State)(nil),                                // 13: openconfig.LocalRoutes.StaticRoutes.Static.State
	(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop)(nil),                     // 14: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop
	(*LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey)(nil),                  // 15: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHopKey
	(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config)(nil),              // 16: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.Config
	(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef)(nil),        // 17: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef
	(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State)(nil),               // 18: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.State
	(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config)(nil), // 19: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.Config
	(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State)(nil),  // 20: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.State
	(*ywrapper.StringValue)(nil),                                                 // 21: ywrapper.StringValue
	(*ywrapper.BoolValue)(nil),                                                   // 22: ywrapper.BoolValue
	(*ywrapper.UintValue)(nil),                                                   // 23: ywrapper.UintValue
	(OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP)(0),                               // 24: openconfig.OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP
}
var file_openconfig_local_routing_proto_depIdxs = []int32{
	1,  // 0: openconfig.LocalRoutes.config:type_name -> openconfig.LocalRoutes.Config
	2,  // 1: openconfig.LocalRoutes.local_aggregates:type_name -> openconfig.LocalRoutes.LocalAggregates
	3,  // 2: openconfig.LocalRoutes.state:type_name -> openconfig.LocalRoutes.State
	4,  // 3: openconfig.LocalRoutes.static_routes:type_name -> openconfig.LocalRoutes.StaticRoutes
	6,  // 4: openconfig.LocalRoutes.LocalAggregates.aggregate:type_name -> openconfig.LocalRoutes.LocalAggregates.AggregateKey
	10, // 5: openconfig.LocalRoutes.StaticRoutes.static:type_name -> openconfig.LocalRoutes.StaticRoutes.StaticKey
	7,  // 6: openconfig.LocalRoutes.LocalAggregates.Aggregate.config:type_name -> openconfig.LocalRoutes.LocalAggregates.Aggregate.Config
	8,  // 7: openconfig.LocalRoutes.LocalAggregates.Aggregate.state:type_name -> openconfig.LocalRoutes.LocalAggregates.Aggregate.State
	5,  // 8: openconfig.LocalRoutes.LocalAggregates.AggregateKey.aggregate:type_name -> openconfig.LocalRoutes.LocalAggregates.Aggregate
	21, // 9: openconfig.LocalRoutes.LocalAggregates.Aggregate.Config.description:type_name -> ywrapper.StringValue
	22, // 10: openconfig.LocalRoutes.LocalAggregates.Aggregate.Config.discard:type_name -> ywrapper.BoolValue
	21, // 11: openconfig.LocalRoutes.LocalAggregates.Aggregate.Config.prefix:type_name -> ywrapper.StringValue
	21, // 12: openconfig.LocalRoutes.LocalAggregates.Aggregate.State.description:type_name -> ywrapper.StringValue
	22, // 13: openconfig.LocalRoutes.LocalAggregates.Aggregate.State.discard:type_name -> ywrapper.BoolValue
	21, // 14: openconfig.LocalRoutes.LocalAggregates.Aggregate.State.prefix:type_name -> ywrapper.StringValue
	11, // 15: openconfig.LocalRoutes.StaticRoutes.Static.config:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.Config
	12, // 16: openconfig.LocalRoutes.StaticRoutes.Static.next_hops:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.NextHops
	13, // 17: openconfig.LocalRoutes.StaticRoutes.Static.state:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.State
	9,  // 18: openconfig.LocalRoutes.StaticRoutes.StaticKey.static:type_name -> openconfig.LocalRoutes.StaticRoutes.Static
	21, // 19: openconfig.LocalRoutes.StaticRoutes.Static.Config.description:type_name -> ywrapper.StringValue
	21, // 20: openconfig.LocalRoutes.StaticRoutes.Static.Config.prefix:type_name -> ywrapper.StringValue
	15, // 21: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.next_hop:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHopKey
	21, // 22: openconfig.LocalRoutes.StaticRoutes.Static.State.description:type_name -> ywrapper.StringValue
	21, // 23: openconfig.LocalRoutes.StaticRoutes.Static.State.prefix:type_name -> ywrapper.StringValue
	16, // 24: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.config:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.Config
	17, // 25: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.interface_ref:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef
	18, // 26: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.state:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.State
	14, // 27: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHopKey.next_hop:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop
	21, // 28: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.Config.index:type_name -> ywrapper.StringValue
	23, // 29: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.Config.metric:type_name -> ywrapper.UintValue
	24, // 30: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.Config.next_hop_openconfiglocalroutinglocaldefinednexthop:type_name -> openconfig.OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP
	22, // 31: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.Config.recurse:type_name -> ywrapper.BoolValue
	19, // 32: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.config:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.Config
	20, // 33: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.state:type_name -> openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.State
	21, // 34: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.State.index:type_name -> ywrapper.StringValue
	23, // 35: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.State.metric:type_name -> ywrapper.UintValue
	24, // 36: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.State.next_hop_openconfiglocalroutinglocaldefinednexthop:type_name -> openconfig.OpenconfigLocalRoutingLOCALDEFINEDNEXTHOP
	22, // 37: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.State.recurse:type_name -> ywrapper.BoolValue
	21, // 38: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.Config.interface:type_name -> ywrapper.StringValue
	23, // 39: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.Config.subinterface:type_name -> ywrapper.UintValue
	21, // 40: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.State.interface:type_name -> ywrapper.StringValue
	23, // 41: openconfig.LocalRoutes.StaticRoutes.Static.NextHops.NextHop.InterfaceRef.State.subinterface:type_name -> ywrapper.UintValue
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_openconfig_local_routing_proto_init() }
func file_openconfig_local_routing_proto_init() {
	if File_openconfig_local_routing_proto != nil {
		return
	}
	file_openconfig_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_openconfig_local_routing_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_LocalAggregates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_LocalAggregates_Aggregate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_LocalAggregates_AggregateKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_LocalAggregates_Aggregate_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_LocalAggregates_Aggregate_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_StaticKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_NextHops); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_NextHops_NextHopKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_local_routing_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_InterfaceRef_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_openconfig_local_routing_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*LocalRoutes_LocalAggregates_Aggregate_Config_SetTagString)(nil),
		(*LocalRoutes_LocalAggregates_Aggregate_Config_SetTagUint64)(nil),
	}
	file_openconfig_local_routing_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*LocalRoutes_LocalAggregates_Aggregate_State_SetTagString)(nil),
		(*LocalRoutes_LocalAggregates_Aggregate_State_SetTagUint64)(nil),
	}
	file_openconfig_local_routing_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*LocalRoutes_StaticRoutes_Static_Config_SetTagString)(nil),
		(*LocalRoutes_StaticRoutes_Static_Config_SetTagUint64)(nil),
	}
	file_openconfig_local_routing_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*LocalRoutes_StaticRoutes_Static_State_SetTagString)(nil),
		(*LocalRoutes_StaticRoutes_Static_State_SetTagUint64)(nil),
	}
	file_openconfig_local_routing_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopOpenconfiglocalroutinglocaldefinednexthop)(nil),
		(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_Config_NextHopString)(nil),
	}
	file_openconfig_local_routing_proto_msgTypes[18].OneofWrappers = []interface{}{
		(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopOpenconfiglocalroutinglocaldefinednexthop)(nil),
		(*LocalRoutes_StaticRoutes_Static_NextHops_NextHop_State_NextHopString)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_openconfig_local_routing_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_openconfig_local_routing_proto_goTypes,
		DependencyIndexes: file_openconfig_local_routing_proto_depIdxs,
		MessageInfos:      file_openconfig_local_routing_proto_msgTypes,
	}.Build()
	File_openconfig_local_routing_proto = out.File
	file_openconfig_local_routing_proto_rawDesc = nil
	file_openconfig_local_routing_proto_goTypes = nil
	file_openconfig_local_routing_proto_depIdxs = nil
}
