// openconfig.openconfig_ap_manager is generated by proto_generator as a protobuf
// representation of a YANG schema.
//
// Input schema modules:
//  - ../api/yang/public/doc/openconfig-example.yang
//  - ../api/yang/public/third_party/ietf/iana-if-type.yang
//  - ../api/yang/public/third_party/ietf/ietf-interfaces.yang
//  - ../api/yang/public/third_party/ietf/ietf-yang-types.yang
//  - ../api/yang/public/third_party/ietf/ietf-inet-types.yang
//  - ../api/yang/public/release/models/bfd/openconfig-bfd.yang
//  - ../api/yang/public/release/models/vlan/openconfig-vlan.yang
//  - ../api/yang/public/release/models/vlan/openconfig-vlan-types.yang
//  - ../api/yang/public/release/models/wifi/openconfig-access-points.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-mac.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-types.yang
//  - ../api/yang/public/release/models/wifi/openconfig-wifi-phy.yang
//  - ../api/yang/public/release/models/wifi/openconfig-ap-interfaces.yang
//  - ../api/yang/public/release/models/wifi/openconfig-ap-manager.yang
//  - ../api/yang/public/release/models/macsec/openconfig-macsec.yang
//  - ../api/yang/public/release/models/macsec/openconfig-macsec-types.yang
//  - ../api/yang/public/release/models/stp/openconfig-spanning-tree-types.yang
//  - ../api/yang/public/release/models/stp/openconfig-spanning-tree.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-errors.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-peer-group.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-types.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-global.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-neighbor.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common-structure.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-policy.yang
//  - ../api/yang/public/release/models/bgp/openconfig-bgp-common-multiprotocol.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-types.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-port.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-fan.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-linecard.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-ext.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-cpu.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-psu.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform.yang
//  - ../api/yang/public/release/models/platform/openconfig-platform-transceiver.yang
//  - ../api/yang/public/release/models/multicast/openconfig-pim-types.yang
//  - ../api/yang/public/release/models/multicast/openconfig-igmp-types.yang
//  - ../api/yang/public/release/models/multicast/openconfig-igmp.yang
//  - ../api/yang/public/release/models/multicast/openconfig-pim.yang
//  - ../api/yang/public/release/models/catalog/openconfig-module-catalog.yang
//  - ../api/yang/public/release/models/catalog/openconfig-catalog-types.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-interfaces.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-8021x.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-types.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-aggregate.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-poe.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-tunnel.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ip.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ethernet.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ethernet-ext.yang
//  - ../api/yang/public/release/models/interfaces/openconfig-if-ip-ext.yang
//  - ../api/yang/public/release/models/acl/openconfig-packet-match-types.yang
//  - ../api/yang/public/release/models/acl/openconfig-packet-match.yang
//  - ../api/yang/public/release/models/acl/openconfig-acl.yang
//  - ../api/yang/public/release/models/system/openconfig-license.yang
//  - ../api/yang/public/release/models/system/openconfig-system.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-radius.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa.yang
//  - ../api/yang/public/release/models/system/openconfig-system-management.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-types.yang
//  - ../api/yang/public/release/models/system/openconfig-procmon.yang
//  - ../api/yang/public/release/models/system/openconfig-messages.yang
//  - ../api/yang/public/release/models/system/openconfig-system-terminal.yang
//  - ../api/yang/public/release/models/system/openconfig-system-logging.yang
//  - ../api/yang/public/release/models/system/openconfig-aaa-tacacs.yang
//  - ../api/yang/public/release/models/system/openconfig-alarms.yang
//  - ../api/yang/public/release/models/system/openconfig-alarm-types.yang
//  - ../api/yang/public/release/models/policy/openconfig-policy-types.yang
//  - ../api/yang/public/release/models/policy/openconfig-routing-policy.yang
//  - ../api/yang/public/release/models/lacp/openconfig-lacp.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-wavelength-router.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-optical-amplifier.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-protection.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-channel-monitor.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-connectivity.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-optical-attenuator.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-line-common.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-transport-types.yang
//  - ../api/yang/public/release/models/optical-transport/openconfig-terminal-device.yang
//  - ../api/yang/public/release/models/telemetry/openconfig-telemetry-types.yang
//  - ../api/yang/public/release/models/telemetry/openconfig-telemetry.yang
//  - ../api/yang/public/release/models/openflow/openconfig-openflow.yang
//  - ../api/yang/public/release/models/openflow/openconfig-openflow-types.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-tables.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-ext.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-table-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-shared-attributes.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp-types.yang
//  - ../api/yang/public/release/models/rib/openconfig-rib-bgp.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-types.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-elements.yang
//  - ../api/yang/public/release/models/qos/openconfig-qos-interfaces.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-srte.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-forwarding-policies.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-interfaces.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-pf-path-groups.yang
//  - ../api/yang/public/release/models/policy-forwarding/openconfig-policy-forwarding.yang
//  - ../api/yang/public/release/models/relay-agent/openconfig-relay-agent.yang
//  - ../api/yang/public/release/models/lldp/openconfig-lldp.yang
//  - ../api/yang/public/release/models/lldp/openconfig-lldp-types.yang
//  - ../api/yang/public/release/models/openconfig-extensions.yang
//  - ../api/yang/public/release/models/types/openconfig-yang-types.yang
//  - ../api/yang/public/release/models/types/openconfig-inet-types.yang
//  - ../api/yang/public/release/models/types/openconfig-types.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-srte-policy.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-rsvp-sr-ext.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-segment-routing-types.yang
//  - ../api/yang/public/release/models/segment-routing/openconfig-segment-routing.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-types.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-igp.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-te.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-rsvp.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-static.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-sr.yang
//  - ../api/yang/public/release/models/mpls/openconfig-mpls-ldp.yang
//  - ../api/yang/public/release/models/probes/openconfig-probes-types.yang
//  - ../api/yang/public/release/models/probes/openconfig-probes.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-lsp.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-lsdb-types.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-policy.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-types.yang
//  - ../api/yang/public/release/models/isis/openconfig-isis-routing.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-area.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospf-policy.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-common.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-global.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-area-interface.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospfv2-lsdb.yang
//  - ../api/yang/public/release/models/ospf/openconfig-ospf-types.yang
//  - ../api/yang/public/release/models/local-routing/openconfig-local-routing.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-l3.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-l2.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-policy.yang
//  - ../api/yang/public/release/models/network-instance/openconfig-network-instance-types.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-mpls.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-common.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-types.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ipv6.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-pf.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-network-instance.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ipv4.yang
//  - ../api/yang/public/release/models/aft/openconfig-aft-ethernet.yang

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        (unknown)
// source: openconfig_ap_manager.proto

package openconfig

import (
	proto "github.com/golang/protobuf/proto"
	_ "github.com/openconfig/ygot/proto/yext"
	ywrapper "github.com/openconfig/ygot/proto/ywrapper"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type JoinedAps_JoinedAp_State_PowerSource int32

const (
	JoinedAps_JoinedAp_State_POWERSOURCE_UNSET JoinedAps_JoinedAp_State_PowerSource = 0
	JoinedAps_JoinedAp_State_POWERSOURCE_AT    JoinedAps_JoinedAp_State_PowerSource = 1
	JoinedAps_JoinedAp_State_POWERSOURCE_AF    JoinedAps_JoinedAp_State_PowerSource = 2
	JoinedAps_JoinedAp_State_POWERSOURCE_PLUG  JoinedAps_JoinedAp_State_PowerSource = 3
)

// Enum value maps for JoinedAps_JoinedAp_State_PowerSource.
var (
	JoinedAps_JoinedAp_State_PowerSource_name = map[int32]string{
		0: "POWERSOURCE_UNSET",
		1: "POWERSOURCE_AT",
		2: "POWERSOURCE_AF",
		3: "POWERSOURCE_PLUG",
	}
	JoinedAps_JoinedAp_State_PowerSource_value = map[string]int32{
		"POWERSOURCE_UNSET": 0,
		"POWERSOURCE_AT":    1,
		"POWERSOURCE_AF":    2,
		"POWERSOURCE_PLUG":  3,
	}
)

func (x JoinedAps_JoinedAp_State_PowerSource) Enum() *JoinedAps_JoinedAp_State_PowerSource {
	p := new(JoinedAps_JoinedAp_State_PowerSource)
	*p = x
	return p
}

func (x JoinedAps_JoinedAp_State_PowerSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JoinedAps_JoinedAp_State_PowerSource) Descriptor() protoreflect.EnumDescriptor {
	return file_openconfig_ap_manager_proto_enumTypes[0].Descriptor()
}

func (JoinedAps_JoinedAp_State_PowerSource) Type() protoreflect.EnumType {
	return &file_openconfig_ap_manager_proto_enumTypes[0]
}

func (x JoinedAps_JoinedAp_State_PowerSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JoinedAps_JoinedAp_State_PowerSource.Descriptor instead.
func (JoinedAps_JoinedAp_State_PowerSource) EnumDescriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type JoinedAps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JoinedAp []*JoinedAps_JoinedApKey `protobuf:"bytes,215441873,rep,name=joined_ap,json=joinedAp,proto3" json:"joined_ap,omitempty"`
}

func (x *JoinedAps) Reset() {
	*x = JoinedAps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinedAps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinedAps) ProtoMessage() {}

func (x *JoinedAps) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinedAps.ProtoReflect.Descriptor instead.
func (*JoinedAps) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{0}
}

func (x *JoinedAps) GetJoinedAp() []*JoinedAps_JoinedApKey {
	if x != nil {
		return x.JoinedAp
	}
	return nil
}

type ProvisionAps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvisionAp []*ProvisionAps_ProvisionApKey `protobuf:"bytes,172245559,rep,name=provision_ap,json=provisionAp,proto3" json:"provision_ap,omitempty"`
}

func (x *ProvisionAps) Reset() {
	*x = ProvisionAps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionAps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionAps) ProtoMessage() {}

func (x *ProvisionAps) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionAps.ProtoReflect.Descriptor instead.
func (*ProvisionAps) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{1}
}

func (x *ProvisionAps) GetProvisionAp() []*ProvisionAps_ProvisionApKey {
	if x != nil {
		return x.ProvisionAp
	}
	return nil
}

type JoinedAps_JoinedAp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *JoinedAps_JoinedAp_State `protobuf:"bytes,345610787,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *JoinedAps_JoinedAp) Reset() {
	*x = JoinedAps_JoinedAp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinedAps_JoinedAp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinedAps_JoinedAp) ProtoMessage() {}

func (x *JoinedAps_JoinedAp) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinedAps_JoinedAp.ProtoReflect.Descriptor instead.
func (*JoinedAps_JoinedAp) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{0, 0}
}

func (x *JoinedAps_JoinedAp) GetState() *JoinedAps_JoinedAp_State {
	if x != nil {
		return x.State
	}
	return nil
}

type JoinedAps_JoinedApKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname string              `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`
	JoinedAp *JoinedAps_JoinedAp `protobuf:"bytes,2,opt,name=joined_ap,json=joinedAp,proto3" json:"joined_ap,omitempty"`
}

func (x *JoinedAps_JoinedApKey) Reset() {
	*x = JoinedAps_JoinedApKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinedAps_JoinedApKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinedAps_JoinedApKey) ProtoMessage() {}

func (x *JoinedAps_JoinedApKey) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinedAps_JoinedApKey.ProtoReflect.Descriptor instead.
func (*JoinedAps_JoinedApKey) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{0, 1}
}

func (x *JoinedAps_JoinedApKey) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *JoinedAps_JoinedApKey) GetJoinedAp() *JoinedAps_JoinedAp {
	if x != nil {
		return x.JoinedAp
	}
	return nil
}

type JoinedAps_JoinedAp_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled         *ywrapper.BoolValue                  `protobuf:"bytes,359246197,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Hostname        *ywrapper.StringValue                `protobuf:"bytes,179090877,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ipv4            *ywrapper.StringValue                `protobuf:"bytes,472039243,opt,name=ipv4,proto3" json:"ipv4,omitempty"`
	Ipv6            *ywrapper.StringValue                `protobuf:"bytes,472039241,opt,name=ipv6,proto3" json:"ipv6,omitempty"`
	Mac             *ywrapper.StringValue                `protobuf:"bytes,123107383,opt,name=mac,proto3" json:"mac,omitempty"`
	Model           *ywrapper.StringValue                `protobuf:"bytes,290964229,opt,name=model,proto3" json:"model,omitempty"`
	Opstate         OpenconfigWifiTypesAPSTATE           `protobuf:"varint,107965202,opt,name=opstate,proto3,enum=openconfig.OpenconfigWifiTypesAPSTATE" json:"opstate,omitempty"`
	PowerSource     JoinedAps_JoinedAp_State_PowerSource `protobuf:"varint,439858589,opt,name=power_source,json=powerSource,proto3,enum=openconfig.JoinedAps_JoinedAp_State_PowerSource" json:"power_source,omitempty"`
	Serial          *ywrapper.StringValue                `protobuf:"bytes,454568434,opt,name=serial,proto3" json:"serial,omitempty"`
	SoftwareVersion *ywrapper.StringValue                `protobuf:"bytes,173712010,opt,name=software_version,json=softwareVersion,proto3" json:"software_version,omitempty"`
	Uptime          *ywrapper.UintValue                  `protobuf:"bytes,38916154,opt,name=uptime,proto3" json:"uptime,omitempty"`
}

func (x *JoinedAps_JoinedAp_State) Reset() {
	*x = JoinedAps_JoinedAp_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinedAps_JoinedAp_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinedAps_JoinedAp_State) ProtoMessage() {}

func (x *JoinedAps_JoinedAp_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinedAps_JoinedAp_State.ProtoReflect.Descriptor instead.
func (*JoinedAps_JoinedAp_State) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *JoinedAps_JoinedAp_State) GetEnabled() *ywrapper.BoolValue {
	if x != nil {
		return x.Enabled
	}
	return nil
}

func (x *JoinedAps_JoinedAp_State) GetHostname() *ywrapper.StringValue {
	if x != nil {
		return x.Hostname
	}
	return nil
}

func (x *JoinedAps_JoinedAp_State) GetIpv4() *ywrapper.StringValue {
	if x != nil {
		return x.Ipv4
	}
	return nil
}

func (x *JoinedAps_JoinedAp_State) GetIpv6() *ywrapper.StringValue {
	if x != nil {
		return x.Ipv6
	}
	return nil
}

func (x *JoinedAps_JoinedAp_State) GetMac() *ywrapper.StringValue {
	if x != nil {
		return x.Mac
	}
	return nil
}

func (x *JoinedAps_JoinedAp_State) GetModel() *ywrapper.StringValue {
	if x != nil {
		return x.Model
	}
	return nil
}

func (x *JoinedAps_JoinedAp_State) GetOpstate() OpenconfigWifiTypesAPSTATE {
	if x != nil {
		return x.Opstate
	}
	return OpenconfigWifiTypesAPSTATE_OPENCONFIGWIFITYPESAPSTATE_UNSET
}

func (x *JoinedAps_JoinedAp_State) GetPowerSource() JoinedAps_JoinedAp_State_PowerSource {
	if x != nil {
		return x.PowerSource
	}
	return JoinedAps_JoinedAp_State_POWERSOURCE_UNSET
}

func (x *JoinedAps_JoinedAp_State) GetSerial() *ywrapper.StringValue {
	if x != nil {
		return x.Serial
	}
	return nil
}

func (x *JoinedAps_JoinedAp_State) GetSoftwareVersion() *ywrapper.StringValue {
	if x != nil {
		return x.SoftwareVersion
	}
	return nil
}

func (x *JoinedAps_JoinedAp_State) GetUptime() *ywrapper.UintValue {
	if x != nil {
		return x.Uptime
	}
	return nil
}

type ProvisionAps_ProvisionAp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *ProvisionAps_ProvisionAp_Config `protobuf:"bytes,215617448,opt,name=config,proto3" json:"config,omitempty"`
	State  *ProvisionAps_ProvisionAp_State  `protobuf:"bytes,335992769,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ProvisionAps_ProvisionAp) Reset() {
	*x = ProvisionAps_ProvisionAp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionAps_ProvisionAp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionAps_ProvisionAp) ProtoMessage() {}

func (x *ProvisionAps_ProvisionAp) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionAps_ProvisionAp.ProtoReflect.Descriptor instead.
func (*ProvisionAps_ProvisionAp) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ProvisionAps_ProvisionAp) GetConfig() *ProvisionAps_ProvisionAp_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ProvisionAps_ProvisionAp) GetState() *ProvisionAps_ProvisionAp_State {
	if x != nil {
		return x.State
	}
	return nil
}

type ProvisionAps_ProvisionApKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mac         string                    `protobuf:"bytes,1,opt,name=mac,proto3" json:"mac,omitempty"`
	ProvisionAp *ProvisionAps_ProvisionAp `protobuf:"bytes,2,opt,name=provision_ap,json=provisionAp,proto3" json:"provision_ap,omitempty"`
}

func (x *ProvisionAps_ProvisionApKey) Reset() {
	*x = ProvisionAps_ProvisionApKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionAps_ProvisionApKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionAps_ProvisionApKey) ProtoMessage() {}

func (x *ProvisionAps_ProvisionApKey) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionAps_ProvisionApKey.ProtoReflect.Descriptor instead.
func (*ProvisionAps_ProvisionApKey) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{1, 1}
}

func (x *ProvisionAps_ProvisionApKey) GetMac() string {
	if x != nil {
		return x.Mac
	}
	return ""
}

func (x *ProvisionAps_ProvisionApKey) GetProvisionAp() *ProvisionAps_ProvisionAp {
	if x != nil {
		return x.ProvisionAp
	}
	return nil
}

type ProvisionAps_ProvisionAp_Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode *ywrapper.StringValue `protobuf:"bytes,206658667,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Hostname    *ywrapper.StringValue `protobuf:"bytes,170733812,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Mac         *ywrapper.StringValue `protobuf:"bytes,194092264,opt,name=mac,proto3" json:"mac,omitempty"`
}

func (x *ProvisionAps_ProvisionAp_Config) Reset() {
	*x = ProvisionAps_ProvisionAp_Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionAps_ProvisionAp_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionAps_ProvisionAp_Config) ProtoMessage() {}

func (x *ProvisionAps_ProvisionAp_Config) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionAps_ProvisionAp_Config.ProtoReflect.Descriptor instead.
func (*ProvisionAps_ProvisionAp_Config) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *ProvisionAps_ProvisionAp_Config) GetCountryCode() *ywrapper.StringValue {
	if x != nil {
		return x.CountryCode
	}
	return nil
}

func (x *ProvisionAps_ProvisionAp_Config) GetHostname() *ywrapper.StringValue {
	if x != nil {
		return x.Hostname
	}
	return nil
}

func (x *ProvisionAps_ProvisionAp_Config) GetMac() *ywrapper.StringValue {
	if x != nil {
		return x.Mac
	}
	return nil
}

type ProvisionAps_ProvisionAp_State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode *ywrapper.StringValue `protobuf:"bytes,408053928,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Hostname    *ywrapper.StringValue `protobuf:"bytes,271064359,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Mac         *ywrapper.StringValue `protobuf:"bytes,419942637,opt,name=mac,proto3" json:"mac,omitempty"`
}

func (x *ProvisionAps_ProvisionAp_State) Reset() {
	*x = ProvisionAps_ProvisionAp_State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_openconfig_ap_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProvisionAps_ProvisionAp_State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProvisionAps_ProvisionAp_State) ProtoMessage() {}

func (x *ProvisionAps_ProvisionAp_State) ProtoReflect() protoreflect.Message {
	mi := &file_openconfig_ap_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProvisionAps_ProvisionAp_State.ProtoReflect.Descriptor instead.
func (*ProvisionAps_ProvisionAp_State) Descriptor() ([]byte, []int) {
	return file_openconfig_ap_manager_proto_rawDescGZIP(), []int{1, 0, 1}
}

func (x *ProvisionAps_ProvisionAp_State) GetCountryCode() *ywrapper.StringValue {
	if x != nil {
		return x.CountryCode
	}
	return nil
}

func (x *ProvisionAps_ProvisionAp_State) GetHostname() *ywrapper.StringValue {
	if x != nil {
		return x.Hostname
	}
	return nil
}

func (x *ProvisionAps_ProvisionAp_State) GetMac() *ywrapper.StringValue {
	if x != nil {
		return x.Mac
	}
	return nil
}

var File_openconfig_ap_manager_proto protoreflect.FileDescriptor

var file_openconfig_ap_manager_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x61, 0x70, 0x5f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6f,
	0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x0e, 0x79, 0x77, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x79, 0x65, 0x78, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x0c,
	0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x73, 0x12, 0x5b, 0x0a, 0x09, 0x6a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x18, 0xd1, 0xc3, 0xdd, 0x66, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x73, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41,
	0x70, 0x4b, 0x65, 0x79, 0x42, 0x18, 0x82, 0x41, 0x15, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x52, 0x08,
	0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x1a, 0x93, 0x0a, 0x0a, 0x08, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x41, 0x70, 0x12, 0x5e, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0xa3,
	0xb4, 0xe6, 0xa4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x73, 0x2e,
	0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x1e,
	0x82, 0x41, 0x1b, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xa6, 0x09, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x59, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0xf5, 0xd2, 0xa6, 0xab, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x26, 0x82, 0x41, 0x23, 0x2f, 0x6a,
	0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x5d, 0x0a, 0x08, 0x68, 0x6f,
	0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xbd, 0xeb, 0xb2, 0x55, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x27, 0x82, 0x41, 0x24, 0x2f, 0x6a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52,
	0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x52, 0x0a, 0x04, 0x69, 0x70, 0x76,
	0x34, 0x18, 0xcb, 0xfe, 0x8a, 0xe1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x42, 0x23, 0x82, 0x41, 0x20, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61,
	0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2f, 0x69, 0x70, 0x76, 0x34, 0x52, 0x04, 0x69, 0x70, 0x76, 0x34, 0x12, 0x52, 0x0a,
	0x04, 0x69, 0x70, 0x76, 0x36, 0x18, 0xc9, 0xfe, 0x8a, 0xe1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x23, 0x82, 0x41, 0x20, 0x2f, 0x6a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x69, 0x70, 0x76, 0x36, 0x52, 0x04, 0x69, 0x70, 0x76,
	0x36, 0x12, 0x4e, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0xb7, 0xf0, 0xd9, 0x3a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x22, 0x82, 0x41, 0x1f, 0x2f, 0x6a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d,
	0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x61, 0x63, 0x52, 0x03, 0x6d, 0x61,
	0x63, 0x12, 0x55, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x85, 0x86, 0xdf, 0x8a, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x24, 0x82, 0x41, 0x21,
	0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x6b, 0x0a, 0x07, 0x6f, 0x70, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x92, 0xd6, 0xbd, 0x33, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x57, 0x69, 0x66, 0x69, 0x54, 0x79, 0x70, 0x65, 0x73, 0x41, 0x50, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x42, 0x26, 0x82, 0x41, 0x23, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2f, 0x6f, 0x70, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x6f, 0x70,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0c, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x9d, 0xeb, 0xde, 0xd1, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x30, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x73, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x42, 0x2b, 0x82, 0x41, 0x28, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61,
	0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2f, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x2d, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x0b, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0xf2, 0xd3, 0xe0, 0xd8, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x25, 0x82, 0x41, 0x22, 0x2f, 0x6a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61,
	0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x74, 0x0a, 0x10, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61,
	0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x8a, 0xc5, 0xea, 0x52, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x2f, 0x82, 0x41, 0x2c, 0x2f,
	0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x2d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x73, 0x6f, 0x66,
	0x74, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x55, 0x0a, 0x06,
	0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xba, 0xa0, 0xc7, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x25, 0x82, 0x41, 0x22, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64,
	0x2d, 0x61, 0x70, 0x73, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x06, 0x75, 0x70, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x0b, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x0e, 0x50, 0x4f, 0x57,
	0x45, 0x52, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x54, 0x10, 0x01, 0x1a, 0x05, 0x82,
	0x41, 0x02, 0x41, 0x54, 0x12, 0x19, 0x0a, 0x0e, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x41, 0x46, 0x10, 0x02, 0x1a, 0x05, 0x82, 0x41, 0x02, 0x41, 0x46, 0x12,
	0x1d, 0x0a, 0x10, 0x50, 0x4f, 0x57, 0x45, 0x52, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x50,
	0x4c, 0x55, 0x47, 0x10, 0x03, 0x1a, 0x07, 0x82, 0x41, 0x04, 0x50, 0x4c, 0x55, 0x47, 0x1a, 0x89,
	0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x3d,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x21, 0x82, 0x41, 0x1e, 0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x73,
	0x2f, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x2d, 0x61, 0x70, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a,
	0x09, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x73, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70,
	0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x70, 0x22, 0xeb, 0x08, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x73, 0x12, 0x6d, 0x0a, 0x0c, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x18, 0xb7, 0x84, 0x91, 0x52,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x4b, 0x65, 0x79, 0x42, 0x1e, 0x82,
	0x41, 0x1b, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x52, 0x0b, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x1a, 0xd9, 0x06, 0x0a, 0x0b, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x12, 0x6d, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0xa8, 0x9f, 0xe8, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x41, 0x70, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x25, 0x82, 0x41, 0x22, 0x2f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x6a, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0xc1, 0xaf, 0x9b, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f,
	0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x41, 0x70, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x41, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x24, 0x82, 0x41, 0x21, 0x2f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0xb6, 0x02, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x6f, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0xeb, 0xb8, 0xc5, 0x62, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x32, 0x82, 0x41, 0x2f, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d,
	0x61, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70,
	0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x2d,
	0x63, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x64, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xf4, 0xe1,
	0xb4, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x2e, 0x82,
	0x41, 0x2b, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x73,
	0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x2f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0xe8,
	0xb9, 0xc6, 0x5c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70,
	0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x29,
	0x82, 0x41, 0x26, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x6d, 0x61, 0x63, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x1a, 0xb5,
	0x02, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x6f, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0xa8, 0xd1, 0xc9, 0xc2, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x31, 0x82, 0x41, 0x2e, 0x2f, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x64, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0xa7, 0xba, 0xa0, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x2d, 0x82, 0x41, 0x2a, 0x2f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x68, 0x6f, 0x73,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x55, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0xed, 0xa1, 0x9f, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x79, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x28, 0x82, 0x41, 0x25, 0x2f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x6d, 0x61,
	0x63, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x1a, 0x8f, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x03, 0x6d, 0x61, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0x82, 0x41, 0x1f, 0x2f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x2d, 0x61, 0x70, 0x2f, 0x6d, 0x61, 0x63, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12,
	0x47, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x42, 0x17, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e,
	0x6e, 0x6f, 0x63, 0x73, 0x79, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_openconfig_ap_manager_proto_rawDescOnce sync.Once
	file_openconfig_ap_manager_proto_rawDescData = file_openconfig_ap_manager_proto_rawDesc
)

func file_openconfig_ap_manager_proto_rawDescGZIP() []byte {
	file_openconfig_ap_manager_proto_rawDescOnce.Do(func() {
		file_openconfig_ap_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_openconfig_ap_manager_proto_rawDescData)
	})
	return file_openconfig_ap_manager_proto_rawDescData
}

var file_openconfig_ap_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_openconfig_ap_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_openconfig_ap_manager_proto_goTypes = []interface{}{
	(JoinedAps_JoinedAp_State_PowerSource)(0), // 0: openconfig.JoinedAps.JoinedAp.State.PowerSource
	(*JoinedAps)(nil),                         // 1: openconfig.JoinedAps
	(*ProvisionAps)(nil),                      // 2: openconfig.ProvisionAps
	(*JoinedAps_JoinedAp)(nil),                // 3: openconfig.JoinedAps.JoinedAp
	(*JoinedAps_JoinedApKey)(nil),             // 4: openconfig.JoinedAps.JoinedApKey
	(*JoinedAps_JoinedAp_State)(nil),          // 5: openconfig.JoinedAps.JoinedAp.State
	(*ProvisionAps_ProvisionAp)(nil),          // 6: openconfig.ProvisionAps.ProvisionAp
	(*ProvisionAps_ProvisionApKey)(nil),       // 7: openconfig.ProvisionAps.ProvisionApKey
	(*ProvisionAps_ProvisionAp_Config)(nil),   // 8: openconfig.ProvisionAps.ProvisionAp.Config
	(*ProvisionAps_ProvisionAp_State)(nil),    // 9: openconfig.ProvisionAps.ProvisionAp.State
	(*ywrapper.BoolValue)(nil),                // 10: ywrapper.BoolValue
	(*ywrapper.StringValue)(nil),              // 11: ywrapper.StringValue
	(OpenconfigWifiTypesAPSTATE)(0),           // 12: openconfig.OpenconfigWifiTypesAPSTATE
	(*ywrapper.UintValue)(nil),                // 13: ywrapper.UintValue
}
var file_openconfig_ap_manager_proto_depIdxs = []int32{
	4,  // 0: openconfig.JoinedAps.joined_ap:type_name -> openconfig.JoinedAps.JoinedApKey
	7,  // 1: openconfig.ProvisionAps.provision_ap:type_name -> openconfig.ProvisionAps.ProvisionApKey
	5,  // 2: openconfig.JoinedAps.JoinedAp.state:type_name -> openconfig.JoinedAps.JoinedAp.State
	3,  // 3: openconfig.JoinedAps.JoinedApKey.joined_ap:type_name -> openconfig.JoinedAps.JoinedAp
	10, // 4: openconfig.JoinedAps.JoinedAp.State.enabled:type_name -> ywrapper.BoolValue
	11, // 5: openconfig.JoinedAps.JoinedAp.State.hostname:type_name -> ywrapper.StringValue
	11, // 6: openconfig.JoinedAps.JoinedAp.State.ipv4:type_name -> ywrapper.StringValue
	11, // 7: openconfig.JoinedAps.JoinedAp.State.ipv6:type_name -> ywrapper.StringValue
	11, // 8: openconfig.JoinedAps.JoinedAp.State.mac:type_name -> ywrapper.StringValue
	11, // 9: openconfig.JoinedAps.JoinedAp.State.model:type_name -> ywrapper.StringValue
	12, // 10: openconfig.JoinedAps.JoinedAp.State.opstate:type_name -> openconfig.OpenconfigWifiTypesAPSTATE
	0,  // 11: openconfig.JoinedAps.JoinedAp.State.power_source:type_name -> openconfig.JoinedAps.JoinedAp.State.PowerSource
	11, // 12: openconfig.JoinedAps.JoinedAp.State.serial:type_name -> ywrapper.StringValue
	11, // 13: openconfig.JoinedAps.JoinedAp.State.software_version:type_name -> ywrapper.StringValue
	13, // 14: openconfig.JoinedAps.JoinedAp.State.uptime:type_name -> ywrapper.UintValue
	8,  // 15: openconfig.ProvisionAps.ProvisionAp.config:type_name -> openconfig.ProvisionAps.ProvisionAp.Config
	9,  // 16: openconfig.ProvisionAps.ProvisionAp.state:type_name -> openconfig.ProvisionAps.ProvisionAp.State
	6,  // 17: openconfig.ProvisionAps.ProvisionApKey.provision_ap:type_name -> openconfig.ProvisionAps.ProvisionAp
	11, // 18: openconfig.ProvisionAps.ProvisionAp.Config.country_code:type_name -> ywrapper.StringValue
	11, // 19: openconfig.ProvisionAps.ProvisionAp.Config.hostname:type_name -> ywrapper.StringValue
	11, // 20: openconfig.ProvisionAps.ProvisionAp.Config.mac:type_name -> ywrapper.StringValue
	11, // 21: openconfig.ProvisionAps.ProvisionAp.State.country_code:type_name -> ywrapper.StringValue
	11, // 22: openconfig.ProvisionAps.ProvisionAp.State.hostname:type_name -> ywrapper.StringValue
	11, // 23: openconfig.ProvisionAps.ProvisionAp.State.mac:type_name -> ywrapper.StringValue
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_openconfig_ap_manager_proto_init() }
func file_openconfig_ap_manager_proto_init() {
	if File_openconfig_ap_manager_proto != nil {
		return
	}
	file_openconfig_enums_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_openconfig_ap_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinedAps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_ap_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionAps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_ap_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinedAps_JoinedAp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_ap_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinedAps_JoinedApKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_ap_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinedAps_JoinedAp_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_ap_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionAps_ProvisionAp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_ap_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionAps_ProvisionApKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_ap_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionAps_ProvisionAp_Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_openconfig_ap_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProvisionAps_ProvisionAp_State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_openconfig_ap_manager_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_openconfig_ap_manager_proto_goTypes,
		DependencyIndexes: file_openconfig_ap_manager_proto_depIdxs,
		EnumInfos:         file_openconfig_ap_manager_proto_enumTypes,
		MessageInfos:      file_openconfig_ap_manager_proto_msgTypes,
	}.Build()
	File_openconfig_ap_manager_proto = out.File
	file_openconfig_ap_manager_proto_rawDesc = nil
	file_openconfig_ap_manager_proto_goTypes = nil
	file_openconfig_ap_manager_proto_depIdxs = nil
}
